


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>jQuery-UI-Date-Range-Picker/js/date.js at master · filamentgroup/jQuery-UI-Date-Range-Picker · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />

    
    

    <meta content="authenticity_token" name="csrf-param" />
<meta content="DSHEi5OsMJFMM+3ARgS0VpCeeVWBU170Uan+IhCwyXI=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/stylesheets/bundles/github-902420bd589a8b9b76e4124fa37b04d3749da803.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/stylesheets/bundles/github2-d60e8ff9ae61ed2bf441f513d94ebd6d6145dd55.css" media="screen" rel="stylesheet" type="text/css" />
    

    <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundles/jquery-225576cef50ef2097c9f9fbcd8953c1572544611.js" type="text/javascript"></script>
    <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundles/github-e1487cc577109893e913f51eb3eeccc1f6553d67.js" type="text/javascript"></script>
    

      <link rel='permalink' href='/filamentgroup/jQuery-UI-Date-Range-Picker/blob/e71a9ed2495fc678a46088fb6cfdcbf79558f660/js/date.js'>
    <meta property="og:title" content="jQuery-UI-Date-Range-Picker"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/filamentgroup/jQuery-UI-Date-Range-Picker"/>
    <meta property="og:image" content="https://a248.e.akamai.net/assets.github.com/images/gravatars/gravatar-140.png?1329275856"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="jQuery-UI-Date-Range-Picker - A range picker built on top of jQuery UI's Datepicker Control"/>

    <meta name="description" content="jQuery-UI-Date-Range-Picker - A range picker built on top of jQuery UI's Datepicker Control" />
  <link href="https://github.com/filamentgroup/jQuery-UI-Date-Range-Picker/commits/master.atom" rel="alternate" title="Recent Commits to jQuery-UI-Date-Range-Picker:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob windows vis-public env-production " data-blob-contribs-enabled="yes">
    <div id="wrapper">

    
    
    

      <div id="header" class="true clearfix">
        <div class="container clearfix">
          <a class="site-logo" href="https://github.com">
            <!--[if IE]>
            <img alt="GitHub" class="github-logo" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7.png?1323882716" />
            <img alt="GitHub" class="github-logo-hover" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7-hover.png?1324325358" />
            <![endif]-->
            <img alt="GitHub" class="github-logo-4x" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1323882716" />
            <img alt="GitHub" class="github-logo-4x-hover" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x-hover.png?1324325358" />
          </a>

                  <!--
      make sure to use fully qualified URLs here since this nav
      is used on error pages on other domains
    -->
    <ul class="top-nav logged_out">
        <li class="pricing"><a href="https://github.com/plans">Signup and Pricing</a></li>
        <li class="explore"><a href="https://github.com/explore">Explore GitHub</a></li>
      <li class="features"><a href="https://github.com/features">Features</a></li>
        <li class="blog"><a href="https://github.com/blog">Blog</a></li>
      <li class="login"><a href="https://github.com/login?return_to=%2Ffilamentgroup%2FjQuery-UI-Date-Range-Picker%2Fblob%2Fmaster%2Fjs%2Fdate.js">Login</a></li>
    </ul>



          
        </div>
      </div>

      

            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="container hentry">
        <div class="pagehead repohead instapaper_ignore readability-menu">
        <div class="title-actions-bar">
          



              <ul class="pagehead-actions">


          <li><a href="/login?return_to=%2Ffilamentgroup%2FjQuery-UI-Date-Range-Picker" class="minibutton btn-watch watch-button entice tooltipped leftwards" rel="nofollow" title="You must be logged in to use this feature"><span><span class="icon"></span>Watch</span></a></li>
          <li><a href="/login?return_to=%2Ffilamentgroup%2FjQuery-UI-Date-Range-Picker" class="minibutton btn-fork fork-button entice tooltipped leftwards" rel="nofollow" title="You must be logged in to use this feature"><span><span class="icon"></span>Fork</span></a></li>


      <li class="repostats">
        <ul class="repo-stats">
          <li class="watchers ">
            <a href="/filamentgroup/jQuery-UI-Date-Range-Picker/watchers" title="Watchers" class="tooltipped downwards">
              143
            </a>
          </li>
          <li class="forks">
            <a href="/filamentgroup/jQuery-UI-Date-Range-Picker/network" title="Forks" class="tooltipped downwards">
              32
            </a>
          </li>
        </ul>
      </li>
    </ul>

          <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title">
            <span class="mini-icon public-repo"></span>
            <span class="author vcard">
<a href="/filamentgroup" class="url fn" itemprop="url" rel="author">              <span itemprop="title">filamentgroup</span>
              </a></span> /
            <strong><a href="/filamentgroup/jQuery-UI-Date-Range-Picker" class="js-current-repository">jQuery-UI-Date-Range-Picker</a></strong>
          </h1>
        </div>

          

  <ul class="tabs">
    <li><a href="/filamentgroup/jQuery-UI-Date-Range-Picker" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/filamentgroup/jQuery-UI-Date-Range-Picker/network" highlight="repo_network">Network</a>
    <li><a href="/filamentgroup/jQuery-UI-Date-Range-Picker/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>7</span></a></li>

      <li><a href="/filamentgroup/jQuery-UI-Date-Range-Picker/issues" highlight="repo_issues">Issues <span class='counter'>16</span></a></li>


    <li><a href="/filamentgroup/jQuery-UI-Date-Range-Picker/graphs" highlight="repo_graphsrepo_contributors">Stats &amp; Graphs</a></li>

  </ul>

  
<div class="frame frame-center tree-finder" style="display:none"
      data-tree-list-url="/filamentgroup/jQuery-UI-Date-Range-Picker/tree-list/e71a9ed2495fc678a46088fb6cfdcbf79558f660"
      data-blob-url-prefix="/filamentgroup/jQuery-UI-Date-Range-Picker/blob/e71a9ed2495fc678a46088fb6cfdcbf79558f660"
    >

  <div class="breadcrumb">
    <span class="bold"><a href="/filamentgroup/jQuery-UI-Date-Range-Picker">jQuery-UI-Date-Range-Picker</a></span> /
    <input class="tree-finder-input js-navigation-enable" type="text" name="query" autocomplete="off" spellcheck="false">
  </div>

    <div class="octotip">
      <p>
        <a href="/filamentgroup/jQuery-UI-Date-Range-Picker/dismiss-tree-finder-help" class="dismiss js-dismiss-tree-list-help" title="Hide this notice forever" rel="nofollow">Dismiss</a>
        <span class="bold">Octotip:</span> You've activated the <em>file finder</em>
        by pressing <span class="kbd">t</span> Start typing to filter the
        file list. Use <span class="kbd badmono">↑</span> and
        <span class="kbd badmono">↓</span> to navigate,
        <span class="kbd">enter</span> to view files.
      </p>
    </div>

  <table class="tree-browser" cellpadding="0" cellspacing="0">
    <tr class="js-header"><th>&nbsp;</th><th>name</th></tr>
    <tr class="js-no-results no-results" style="display: none">
      <th colspan="2">No matching files</th>
    </tr>
    <tbody class="js-results-list js-navigation-container">
    </tbody>
  </table>
</div>

<div id="jump-to-line" style="display:none">
  <h2>Jump to Line</h2>
  <form accept-charset="UTF-8">
    <input name="utf8" type="hidden" value="&#x2713;" />
    <input class="textfield" type="text">
    <div class="full-button">
      <button type="submit" class="classy">
        <span>Go</span>
      </button>
    </div>
  </form>
</div>


<div class="subnav-bar">

  <ul class="actions subnav">
    <li><a href="/filamentgroup/jQuery-UI-Date-Range-Picker/tags" class="blank" highlight="repo_tags">Tags <span class="counter">0</span></a></li>
    <li><a href="/filamentgroup/jQuery-UI-Date-Range-Picker/downloads" class="blank downloads-blank" highlight="repo_downloads">Downloads <span class="counter">0</span></a></li>
    
  </ul>

  <ul class="scope">
    <li class="switcher">

      <div class="context-menu-container js-menu-container">
        <a href="#"
           class="minibutton bigger switcher js-menu-target js-commitish-button btn-branch repo-tree"
           data-master-branch="master"
           data-ref="master">
          <span><span class="icon"></span><i>branch:</i> master</span>
        </a>

        <div class="context-pane commitish-context js-menu-content">
          <a href="javascript:;" class="close js-menu-close"></a>
          <div class="context-title">Switch Branches/Tags</div>
          <div class="context-body pane-selector commitish-selector js-filterable-commitishes">
            <div class="filterbar">
              <div class="placeholder-field js-placeholder-field">
                <label class="placeholder" for="context-commitish-filter-field" data-placeholder-mode="sticky">Filter branches/tags</label>
                <input type="text" id="context-commitish-filter-field" class="commitish-filter" />
              </div>

              <ul class="tabs">
                <li><a href="#" data-filter="branches" class="selected">Branches</a></li>
                <li><a href="#" data-filter="tags">Tags</a></li>
              </ul>
            </div>

              <div class="commitish-item branch-commitish selector-item">
                <h4>
                    <a href="/filamentgroup/jQuery-UI-Date-Range-Picker/blob/master/js/date.js" data-name="master" rel="nofollow">master</a>
                </h4>
              </div>


            <div class="no-results" style="display:none">Nothing to show</div>
          </div>
        </div><!-- /.commitish-context-context -->
      </div>

    </li>
  </ul>

  <ul class="subnav with-scope">

    <li><a href="/filamentgroup/jQuery-UI-Date-Range-Picker" class="selected" highlight="repo_source">Files</a></li>
    <li><a href="/filamentgroup/jQuery-UI-Date-Range-Picker/commits/master" highlight="repo_commits">Commits</a></li>
    <li><a href="/filamentgroup/jQuery-UI-Date-Range-Picker/branches" class="" highlight="repo_branches" rel="nofollow">Branches <span class="counter">1</span></a></li>
  </ul>

</div>

  
  
  


          

        </div><!-- /.repohead -->

        





<!-- block_view_fragment_key: views7/v8/blob:v21:cb1b353bb6eefc139d17cf8523dc3ddc -->
  <div id="slider">

    <div class="breadcrumb" data-path="js/date.js/">
      <b itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/filamentgroup/jQuery-UI-Date-Range-Picker/tree/e71a9ed2495fc678a46088fb6cfdcbf79558f660" class="js-rewrite-sha" itemprop="url"><span itemprop="title">jQuery-UI-Date-Range-Picker</span></a></b> / <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/filamentgroup/jQuery-UI-Date-Range-Picker/tree/e71a9ed2495fc678a46088fb6cfdcbf79558f660/js" class="js-rewrite-sha" itemscope="url"><span itemprop="title">js</span></a></span> / <strong class="final-path">date.js</strong> <span class="js-clippy mini-icon clippy " data-clipboard-text="js/date.js" data-copied-hint="copied!" data-copy-hint="copy to clipboard"></span>
    </div>


      <div class="commit file-history-tease" data-path="js/date.js/">
        <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/3a7f6c5a576c8a24ec942d81de56ff88?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="24" />
        <span class="author"><a href="/chrismbarr">chrismbarr</a></span>
        <time class="js-relative-date " datetime="2010-12-16T09:43:36-08:00" title="2010-12-16 09:43:36">December 16, 2010</time>
        <div class="commit-title">
            <a href="/filamentgroup/jQuery-UI-Date-Range-Picker/commit/e71a9ed2495fc678a46088fb6cfdcbf79558f660" class="message">Changes for jQuery UI 1.8.7 &amp; added a compressed version</a>
        </div>

        <div class="participation">
          <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>2</strong> contributors</a></p>
              <a class="avatar tooltipped downwards" title="scottjehl" href="/filamentgroup/jQuery-UI-Date-Range-Picker/commits/master/js/date.js?author=scottjehl"><img height="20" src="https://secure.gravatar.com/avatar/4137f7daffde77fce06a26a1ac92f9bf?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="chrismbarr" href="/filamentgroup/jQuery-UI-Date-Range-Picker/commits/master/js/date.js?author=chrismbarr"><img height="20" src="https://secure.gravatar.com/avatar/3a7f6c5a576c8a24ec942d81de56ff88?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="20" /></a>


        </div>
        <div id="blob_contributors_box" style="display:none">
          <h2>Users on GitHub who have contributed to this file</h2>
          <ul class="facebox-user-list">
            <li>
              <img height="24" src="https://secure.gravatar.com/avatar/4137f7daffde77fce06a26a1ac92f9bf?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="24" />
              <a href="/scottjehl">scottjehl</a>
            </li>
            <li>
              <img height="24" src="https://secure.gravatar.com/avatar/3a7f6c5a576c8a24ec942d81de56ff88?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="24" />
              <a href="/chrismbarr">chrismbarr</a>
            </li>
          </ul>
        </div>
      </div>

    <div class="frames">
      <div class="frame frame-center" data-path="js/date.js/" data-permalink-url="/filamentgroup/jQuery-UI-Date-Range-Picker/blob/e71a9ed2495fc678a46088fb6cfdcbf79558f660/js/date.js" data-title="jQuery-UI-Date-Range-Picker/js/date.js at master · filamentgroup/jQuery-UI-Date-Range-Picker · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon text-file"></b></span>
                <span class="mode" title="File Mode">100644</span>
                  <span>375 lines (333 sloc)</span>
                <span>33.223 kb</span>
              </div>
              <ul class="button-group actions">
                  <li>
                    <a class="grouped-button file-edit-link minibutton bigger lighter js-rewrite-sha" href="/filamentgroup/jQuery-UI-Date-Range-Picker/edit/e71a9ed2495fc678a46088fb6cfdcbf79558f660/js/date.js" data-method="post" rel="nofollow"><span>Edit this file</span></a>
                  </li>

                <li>
                  <a href="/filamentgroup/jQuery-UI-Date-Range-Picker/raw/master/js/date.js" class="minibutton btn-raw grouped-button bigger lighter" id="raw-url"><span><span class="icon"></span>Raw</span></a>
                </li>
                  <li>
                    <a href="/filamentgroup/jQuery-UI-Date-Range-Picker/blame/master/js/date.js" class="minibutton btn-blame grouped-button bigger lighter"><span><span class="icon"></span>Blame</span></a>
                  </li>
                <li>
                  <a href="/filamentgroup/jQuery-UI-Date-Range-Picker/commits/master/js/date.js" class="minibutton btn-history grouped-button bigger lighter" rel="nofollow"><span><span class="icon"></span>History</span></a>
                </li>
              </ul>
            </div>
              <div class="data type-javascript">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>
<span id="L146" rel="#L146">146</span>
<span id="L147" rel="#L147">147</span>
<span id="L148" rel="#L148">148</span>
<span id="L149" rel="#L149">149</span>
<span id="L150" rel="#L150">150</span>
<span id="L151" rel="#L151">151</span>
<span id="L152" rel="#L152">152</span>
<span id="L153" rel="#L153">153</span>
<span id="L154" rel="#L154">154</span>
<span id="L155" rel="#L155">155</span>
<span id="L156" rel="#L156">156</span>
<span id="L157" rel="#L157">157</span>
<span id="L158" rel="#L158">158</span>
<span id="L159" rel="#L159">159</span>
<span id="L160" rel="#L160">160</span>
<span id="L161" rel="#L161">161</span>
<span id="L162" rel="#L162">162</span>
<span id="L163" rel="#L163">163</span>
<span id="L164" rel="#L164">164</span>
<span id="L165" rel="#L165">165</span>
<span id="L166" rel="#L166">166</span>
<span id="L167" rel="#L167">167</span>
<span id="L168" rel="#L168">168</span>
<span id="L169" rel="#L169">169</span>
<span id="L170" rel="#L170">170</span>
<span id="L171" rel="#L171">171</span>
<span id="L172" rel="#L172">172</span>
<span id="L173" rel="#L173">173</span>
<span id="L174" rel="#L174">174</span>
<span id="L175" rel="#L175">175</span>
<span id="L176" rel="#L176">176</span>
<span id="L177" rel="#L177">177</span>
<span id="L178" rel="#L178">178</span>
<span id="L179" rel="#L179">179</span>
<span id="L180" rel="#L180">180</span>
<span id="L181" rel="#L181">181</span>
<span id="L182" rel="#L182">182</span>
<span id="L183" rel="#L183">183</span>
<span id="L184" rel="#L184">184</span>
<span id="L185" rel="#L185">185</span>
<span id="L186" rel="#L186">186</span>
<span id="L187" rel="#L187">187</span>
<span id="L188" rel="#L188">188</span>
<span id="L189" rel="#L189">189</span>
<span id="L190" rel="#L190">190</span>
<span id="L191" rel="#L191">191</span>
<span id="L192" rel="#L192">192</span>
<span id="L193" rel="#L193">193</span>
<span id="L194" rel="#L194">194</span>
<span id="L195" rel="#L195">195</span>
<span id="L196" rel="#L196">196</span>
<span id="L197" rel="#L197">197</span>
<span id="L198" rel="#L198">198</span>
<span id="L199" rel="#L199">199</span>
<span id="L200" rel="#L200">200</span>
<span id="L201" rel="#L201">201</span>
<span id="L202" rel="#L202">202</span>
<span id="L203" rel="#L203">203</span>
<span id="L204" rel="#L204">204</span>
<span id="L205" rel="#L205">205</span>
<span id="L206" rel="#L206">206</span>
<span id="L207" rel="#L207">207</span>
<span id="L208" rel="#L208">208</span>
<span id="L209" rel="#L209">209</span>
<span id="L210" rel="#L210">210</span>
<span id="L211" rel="#L211">211</span>
<span id="L212" rel="#L212">212</span>
<span id="L213" rel="#L213">213</span>
<span id="L214" rel="#L214">214</span>
<span id="L215" rel="#L215">215</span>
<span id="L216" rel="#L216">216</span>
<span id="L217" rel="#L217">217</span>
<span id="L218" rel="#L218">218</span>
<span id="L219" rel="#L219">219</span>
<span id="L220" rel="#L220">220</span>
<span id="L221" rel="#L221">221</span>
<span id="L222" rel="#L222">222</span>
<span id="L223" rel="#L223">223</span>
<span id="L224" rel="#L224">224</span>
<span id="L225" rel="#L225">225</span>
<span id="L226" rel="#L226">226</span>
<span id="L227" rel="#L227">227</span>
<span id="L228" rel="#L228">228</span>
<span id="L229" rel="#L229">229</span>
<span id="L230" rel="#L230">230</span>
<span id="L231" rel="#L231">231</span>
<span id="L232" rel="#L232">232</span>
<span id="L233" rel="#L233">233</span>
<span id="L234" rel="#L234">234</span>
<span id="L235" rel="#L235">235</span>
<span id="L236" rel="#L236">236</span>
<span id="L237" rel="#L237">237</span>
<span id="L238" rel="#L238">238</span>
<span id="L239" rel="#L239">239</span>
<span id="L240" rel="#L240">240</span>
<span id="L241" rel="#L241">241</span>
<span id="L242" rel="#L242">242</span>
<span id="L243" rel="#L243">243</span>
<span id="L244" rel="#L244">244</span>
<span id="L245" rel="#L245">245</span>
<span id="L246" rel="#L246">246</span>
<span id="L247" rel="#L247">247</span>
<span id="L248" rel="#L248">248</span>
<span id="L249" rel="#L249">249</span>
<span id="L250" rel="#L250">250</span>
<span id="L251" rel="#L251">251</span>
<span id="L252" rel="#L252">252</span>
<span id="L253" rel="#L253">253</span>
<span id="L254" rel="#L254">254</span>
<span id="L255" rel="#L255">255</span>
<span id="L256" rel="#L256">256</span>
<span id="L257" rel="#L257">257</span>
<span id="L258" rel="#L258">258</span>
<span id="L259" rel="#L259">259</span>
<span id="L260" rel="#L260">260</span>
<span id="L261" rel="#L261">261</span>
<span id="L262" rel="#L262">262</span>
<span id="L263" rel="#L263">263</span>
<span id="L264" rel="#L264">264</span>
<span id="L265" rel="#L265">265</span>
<span id="L266" rel="#L266">266</span>
<span id="L267" rel="#L267">267</span>
<span id="L268" rel="#L268">268</span>
<span id="L269" rel="#L269">269</span>
<span id="L270" rel="#L270">270</span>
<span id="L271" rel="#L271">271</span>
<span id="L272" rel="#L272">272</span>
<span id="L273" rel="#L273">273</span>
<span id="L274" rel="#L274">274</span>
<span id="L275" rel="#L275">275</span>
<span id="L276" rel="#L276">276</span>
<span id="L277" rel="#L277">277</span>
<span id="L278" rel="#L278">278</span>
<span id="L279" rel="#L279">279</span>
<span id="L280" rel="#L280">280</span>
<span id="L281" rel="#L281">281</span>
<span id="L282" rel="#L282">282</span>
<span id="L283" rel="#L283">283</span>
<span id="L284" rel="#L284">284</span>
<span id="L285" rel="#L285">285</span>
<span id="L286" rel="#L286">286</span>
<span id="L287" rel="#L287">287</span>
<span id="L288" rel="#L288">288</span>
<span id="L289" rel="#L289">289</span>
<span id="L290" rel="#L290">290</span>
<span id="L291" rel="#L291">291</span>
<span id="L292" rel="#L292">292</span>
<span id="L293" rel="#L293">293</span>
<span id="L294" rel="#L294">294</span>
<span id="L295" rel="#L295">295</span>
<span id="L296" rel="#L296">296</span>
<span id="L297" rel="#L297">297</span>
<span id="L298" rel="#L298">298</span>
<span id="L299" rel="#L299">299</span>
<span id="L300" rel="#L300">300</span>
<span id="L301" rel="#L301">301</span>
<span id="L302" rel="#L302">302</span>
<span id="L303" rel="#L303">303</span>
<span id="L304" rel="#L304">304</span>
<span id="L305" rel="#L305">305</span>
<span id="L306" rel="#L306">306</span>
<span id="L307" rel="#L307">307</span>
<span id="L308" rel="#L308">308</span>
<span id="L309" rel="#L309">309</span>
<span id="L310" rel="#L310">310</span>
<span id="L311" rel="#L311">311</span>
<span id="L312" rel="#L312">312</span>
<span id="L313" rel="#L313">313</span>
<span id="L314" rel="#L314">314</span>
<span id="L315" rel="#L315">315</span>
<span id="L316" rel="#L316">316</span>
<span id="L317" rel="#L317">317</span>
<span id="L318" rel="#L318">318</span>
<span id="L319" rel="#L319">319</span>
<span id="L320" rel="#L320">320</span>
<span id="L321" rel="#L321">321</span>
<span id="L322" rel="#L322">322</span>
<span id="L323" rel="#L323">323</span>
<span id="L324" rel="#L324">324</span>
<span id="L325" rel="#L325">325</span>
<span id="L326" rel="#L326">326</span>
<span id="L327" rel="#L327">327</span>
<span id="L328" rel="#L328">328</span>
<span id="L329" rel="#L329">329</span>
<span id="L330" rel="#L330">330</span>
<span id="L331" rel="#L331">331</span>
<span id="L332" rel="#L332">332</span>
<span id="L333" rel="#L333">333</span>
<span id="L334" rel="#L334">334</span>
<span id="L335" rel="#L335">335</span>
<span id="L336" rel="#L336">336</span>
<span id="L337" rel="#L337">337</span>
<span id="L338" rel="#L338">338</span>
<span id="L339" rel="#L339">339</span>
<span id="L340" rel="#L340">340</span>
<span id="L341" rel="#L341">341</span>
<span id="L342" rel="#L342">342</span>
<span id="L343" rel="#L343">343</span>
<span id="L344" rel="#L344">344</span>
<span id="L345" rel="#L345">345</span>
<span id="L346" rel="#L346">346</span>
<span id="L347" rel="#L347">347</span>
<span id="L348" rel="#L348">348</span>
<span id="L349" rel="#L349">349</span>
<span id="L350" rel="#L350">350</span>
<span id="L351" rel="#L351">351</span>
<span id="L352" rel="#L352">352</span>
<span id="L353" rel="#L353">353</span>
<span id="L354" rel="#L354">354</span>
<span id="L355" rel="#L355">355</span>
<span id="L356" rel="#L356">356</span>
<span id="L357" rel="#L357">357</span>
<span id="L358" rel="#L358">358</span>
<span id="L359" rel="#L359">359</span>
<span id="L360" rel="#L360">360</span>
<span id="L361" rel="#L361">361</span>
<span id="L362" rel="#L362">362</span>
<span id="L363" rel="#L363">363</span>
<span id="L364" rel="#L364">364</span>
<span id="L365" rel="#L365">365</span>
<span id="L366" rel="#L366">366</span>
<span id="L367" rel="#L367">367</span>
<span id="L368" rel="#L368">368</span>
<span id="L369" rel="#L369">369</span>
<span id="L370" rel="#L370">370</span>
<span id="L371" rel="#L371">371</span>
<span id="L372" rel="#L372">372</span>
<span id="L373" rel="#L373">373</span>
<span id="L374" rel="#L374">374</span>
<span id="L375" rel="#L375">375</span>
</pre>
          </td>
          <td width="100%">
                <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/**</span></div><div class='line' id='LC2'><span class="cm"> * Version: 1.0 Alpha-1 </span></div><div class='line' id='LC3'><span class="cm"> * Build Date: 13-Nov-2007</span></div><div class='line' id='LC4'><span class="cm"> * Copyright (c) 2006-2007, Coolite Inc. (http://www.coolite.com/). All rights reserved.</span></div><div class='line' id='LC5'><span class="cm"> * License: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. </span></div><div class='line' id='LC6'><span class="cm"> * Website: http://www.datejs.com/ or http://www.coolite.com/datejs/</span></div><div class='line' id='LC7'><span class="cm"> */</span></div><div class='line' id='LC8'><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;en-US&quot;</span><span class="p">,</span><span class="nx">englishName</span><span class="o">:</span><span class="s2">&quot;English (United States)&quot;</span><span class="p">,</span><span class="nx">nativeName</span><span class="o">:</span><span class="s2">&quot;English (United States)&quot;</span><span class="p">,</span><span class="nx">dayNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;Sunday&quot;</span><span class="p">,</span><span class="s2">&quot;Monday&quot;</span><span class="p">,</span><span class="s2">&quot;Tuesday&quot;</span><span class="p">,</span><span class="s2">&quot;Wednesday&quot;</span><span class="p">,</span><span class="s2">&quot;Thursday&quot;</span><span class="p">,</span><span class="s2">&quot;Friday&quot;</span><span class="p">,</span><span class="s2">&quot;Saturday&quot;</span><span class="p">],</span><span class="nx">abbreviatedDayNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;Sun&quot;</span><span class="p">,</span><span class="s2">&quot;Mon&quot;</span><span class="p">,</span><span class="s2">&quot;Tue&quot;</span><span class="p">,</span><span class="s2">&quot;Wed&quot;</span><span class="p">,</span><span class="s2">&quot;Thu&quot;</span><span class="p">,</span><span class="s2">&quot;Fri&quot;</span><span class="p">,</span><span class="s2">&quot;Sat&quot;</span><span class="p">],</span><span class="nx">shortestDayNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;Su&quot;</span><span class="p">,</span><span class="s2">&quot;Mo&quot;</span><span class="p">,</span><span class="s2">&quot;Tu&quot;</span><span class="p">,</span><span class="s2">&quot;We&quot;</span><span class="p">,</span><span class="s2">&quot;Th&quot;</span><span class="p">,</span><span class="s2">&quot;Fr&quot;</span><span class="p">,</span><span class="s2">&quot;Sa&quot;</span><span class="p">],</span><span class="nx">firstLetterDayNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;S&quot;</span><span class="p">,</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="s2">&quot;T&quot;</span><span class="p">,</span><span class="s2">&quot;W&quot;</span><span class="p">,</span><span class="s2">&quot;T&quot;</span><span class="p">,</span><span class="s2">&quot;F&quot;</span><span class="p">,</span><span class="s2">&quot;S&quot;</span><span class="p">],</span><span class="nx">monthNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;January&quot;</span><span class="p">,</span><span class="s2">&quot;February&quot;</span><span class="p">,</span><span class="s2">&quot;March&quot;</span><span class="p">,</span><span class="s2">&quot;April&quot;</span><span class="p">,</span><span class="s2">&quot;May&quot;</span><span class="p">,</span><span class="s2">&quot;June&quot;</span><span class="p">,</span><span class="s2">&quot;July&quot;</span><span class="p">,</span><span class="s2">&quot;August&quot;</span><span class="p">,</span><span class="s2">&quot;September&quot;</span><span class="p">,</span><span class="s2">&quot;October&quot;</span><span class="p">,</span><span class="s2">&quot;November&quot;</span><span class="p">,</span><span class="s2">&quot;December&quot;</span><span class="p">],</span><span class="nx">abbreviatedMonthNames</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;Jan&quot;</span><span class="p">,</span><span class="s2">&quot;Feb&quot;</span><span class="p">,</span><span class="s2">&quot;Mar&quot;</span><span class="p">,</span><span class="s2">&quot;Apr&quot;</span><span class="p">,</span><span class="s2">&quot;May&quot;</span><span class="p">,</span><span class="s2">&quot;Jun&quot;</span><span class="p">,</span><span class="s2">&quot;Jul&quot;</span><span class="p">,</span><span class="s2">&quot;Aug&quot;</span><span class="p">,</span><span class="s2">&quot;Sep&quot;</span><span class="p">,</span><span class="s2">&quot;Oct&quot;</span><span class="p">,</span><span class="s2">&quot;Nov&quot;</span><span class="p">,</span><span class="s2">&quot;Dec&quot;</span><span class="p">],</span><span class="nx">amDesignator</span><span class="o">:</span><span class="s2">&quot;AM&quot;</span><span class="p">,</span><span class="nx">pmDesignator</span><span class="o">:</span><span class="s2">&quot;PM&quot;</span><span class="p">,</span><span class="nx">firstDayOfWeek</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">twoDigitYearMax</span><span class="o">:</span><span class="mi">2029</span><span class="p">,</span><span class="nx">dateElementOrder</span><span class="o">:</span><span class="s2">&quot;mdy&quot;</span><span class="p">,</span><span class="nx">formatPatterns</span><span class="o">:</span><span class="p">{</span><span class="nx">shortDate</span><span class="o">:</span><span class="s2">&quot;M/d/yyyy&quot;</span><span class="p">,</span><span class="nx">longDate</span><span class="o">:</span><span class="s2">&quot;dddd, MMMM dd, yyyy&quot;</span><span class="p">,</span><span class="nx">shortTime</span><span class="o">:</span><span class="s2">&quot;h:mm tt&quot;</span><span class="p">,</span><span class="nx">longTime</span><span class="o">:</span><span class="s2">&quot;h:mm:ss tt&quot;</span><span class="p">,</span><span class="nx">fullDateTime</span><span class="o">:</span><span class="s2">&quot;dddd, MMMM dd, yyyy h:mm:ss tt&quot;</span><span class="p">,</span><span class="nx">sortableDateTime</span><span class="o">:</span><span class="s2">&quot;yyyy-MM-ddTHH:mm:ss&quot;</span><span class="p">,</span><span class="nx">universalSortableDateTime</span><span class="o">:</span><span class="s2">&quot;yyyy-MM-dd HH:mm:ssZ&quot;</span><span class="p">,</span><span class="nx">rfc1123</span><span class="o">:</span><span class="s2">&quot;ddd, dd MMM yyyy HH:mm:ss GMT&quot;</span><span class="p">,</span><span class="nx">monthDay</span><span class="o">:</span><span class="s2">&quot;MMMM dd&quot;</span><span class="p">,</span><span class="nx">yearMonth</span><span class="o">:</span><span class="s2">&quot;MMMM, yyyy&quot;</span><span class="p">},</span><span class="nx">regexPatterns</span><span class="o">:</span><span class="p">{</span><span class="nx">jan</span><span class="o">:</span><span class="sr">/^jan(uary)?/i</span><span class="p">,</span><span class="nx">feb</span><span class="o">:</span><span class="sr">/^feb(ruary)?/i</span><span class="p">,</span><span class="nx">mar</span><span class="o">:</span><span class="sr">/^mar(ch)?/i</span><span class="p">,</span><span class="nx">apr</span><span class="o">:</span><span class="sr">/^apr(il)?/i</span><span class="p">,</span><span class="nx">may</span><span class="o">:</span><span class="sr">/^may/i</span><span class="p">,</span><span class="nx">jun</span><span class="o">:</span><span class="sr">/^jun(e)?/i</span><span class="p">,</span><span class="nx">jul</span><span class="o">:</span><span class="sr">/^jul(y)?/i</span><span class="p">,</span><span class="nx">aug</span><span class="o">:</span><span class="sr">/^aug(ust)?/i</span><span class="p">,</span><span class="nx">sep</span><span class="o">:</span><span class="sr">/^sep(t(ember)?)?/i</span><span class="p">,</span><span class="nx">oct</span><span class="o">:</span><span class="sr">/^oct(ober)?/i</span><span class="p">,</span><span class="nx">nov</span><span class="o">:</span><span class="sr">/^nov(ember)?/i</span><span class="p">,</span><span class="nx">dec</span><span class="o">:</span><span class="sr">/^dec(ember)?/i</span><span class="p">,</span><span class="nb">sun</span><span class="o">:</span><span class="sr">/^su(n(day)?)?/i</span><span class="p">,</span><span class="nx">mon</span><span class="o">:</span><span class="sr">/^mo(n(day)?)?/i</span><span class="p">,</span><span class="nx">tue</span><span class="o">:</span><span class="sr">/^tu(e(s(day)?)?)?/i</span><span class="p">,</span><span class="nx">wed</span><span class="o">:</span><span class="sr">/^we(d(nesday)?)?/i</span><span class="p">,</span><span class="nx">thu</span><span class="o">:</span><span class="sr">/^th(u(r(s(day)?)?)?)?/i</span><span class="p">,</span><span class="nx">fri</span><span class="o">:</span><span class="sr">/^fr(i(day)?)?/i</span><span class="p">,</span><span class="nx">sat</span><span class="o">:</span><span class="sr">/^sa(t(urday)?)?/i</span><span class="p">,</span><span class="nx">future</span><span class="o">:</span><span class="sr">/^next/i</span><span class="p">,</span><span class="nx">past</span><span class="o">:</span><span class="sr">/^last|past|prev(ious)?/i</span><span class="p">,</span><span class="nx">add</span><span class="o">:</span><span class="sr">/^(\+|after|from)/i</span><span class="p">,</span><span class="nx">subtract</span><span class="o">:</span><span class="sr">/^(\-|before|ago)/i</span><span class="p">,</span><span class="nx">yesterday</span><span class="o">:</span><span class="sr">/^yesterday/i</span><span class="p">,</span><span class="nx">today</span><span class="o">:</span><span class="sr">/^t(oday)?/i</span><span class="p">,</span><span class="nx">tomorrow</span><span class="o">:</span><span class="sr">/^tomorrow/i</span><span class="p">,</span><span class="nx">now</span><span class="o">:</span><span class="sr">/^n(ow)?/i</span><span class="p">,</span><span class="nx">millisecond</span><span class="o">:</span><span class="sr">/^ms|milli(second)?s?/i</span><span class="p">,</span><span class="nx">second</span><span class="o">:</span><span class="sr">/^sec(ond)?s?/i</span><span class="p">,</span><span class="nx">minute</span><span class="o">:</span><span class="sr">/^min(ute)?s?/i</span><span class="p">,</span><span class="nx">hour</span><span class="o">:</span><span class="sr">/^h(ou)?rs?/i</span><span class="p">,</span><span class="nx">week</span><span class="o">:</span><span class="sr">/^w(ee)?k/i</span><span class="p">,</span><span class="nx">month</span><span class="o">:</span><span class="sr">/^m(o(nth)?s?)?/i</span><span class="p">,</span><span class="nx">day</span><span class="o">:</span><span class="sr">/^d(ays?)?/i</span><span class="p">,</span><span class="nx">year</span><span class="o">:</span><span class="sr">/^y((ea)?rs?)?/i</span><span class="p">,</span><span class="nx">shortMeridian</span><span class="o">:</span><span class="sr">/^(a|p)/i</span><span class="p">,</span><span class="nx">longMeridian</span><span class="o">:</span><span class="sr">/^(a\.?m?\.?|p\.?m?\.?)/i</span><span class="p">,</span><span class="nx">timezone</span><span class="o">:</span><span class="sr">/^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i</span><span class="p">,</span><span class="nx">ordinalSuffix</span><span class="o">:</span><span class="sr">/^\s*(st|nd|rd|th)/i</span><span class="p">,</span><span class="nx">timeContext</span><span class="o">:</span><span class="sr">/^\s*(\:|a|p)/i</span><span class="p">},</span><span class="nx">abbreviatedTimeZoneStandard</span><span class="o">:</span><span class="p">{</span><span class="nx">GMT</span><span class="o">:</span><span class="s2">&quot;-000&quot;</span><span class="p">,</span><span class="nx">EST</span><span class="o">:</span><span class="s2">&quot;-0400&quot;</span><span class="p">,</span><span class="nx">CST</span><span class="o">:</span><span class="s2">&quot;-0500&quot;</span><span class="p">,</span><span class="nx">MST</span><span class="o">:</span><span class="s2">&quot;-0600&quot;</span><span class="p">,</span><span class="nx">PST</span><span class="o">:</span><span class="s2">&quot;-0700&quot;</span><span class="p">},</span><span class="nx">abbreviatedTimeZoneDST</span><span class="o">:</span><span class="p">{</span><span class="nx">GMT</span><span class="o">:</span><span class="s2">&quot;-000&quot;</span><span class="p">,</span><span class="nx">EDT</span><span class="o">:</span><span class="s2">&quot;-0500&quot;</span><span class="p">,</span><span class="nx">CDT</span><span class="o">:</span><span class="s2">&quot;-0600&quot;</span><span class="p">,</span><span class="nx">MDT</span><span class="o">:</span><span class="s2">&quot;-0700&quot;</span><span class="p">,</span><span class="nx">PDT</span><span class="o">:</span><span class="s2">&quot;-0800&quot;</span><span class="p">}};</span></div><div class='line' id='LC9'><span class="nb">Date</span><span class="p">.</span><span class="nx">getMonthNumberFromName</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">monthNames</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">abbreviatedMonthNames</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">name</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">s</span><span class="o">||</span><span class="nx">m</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">;}}</span></div><div class='line' id='LC10'><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getDayNumberFromName</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">dayNames</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">abbreviatedDayNames</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">shortestDayNames</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">name</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">s</span><span class="o">||</span><span class="nx">m</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">;}}</span></div><div class='line' id='LC11'><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">isLeapYear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">year</span><span class="p">){</span><span class="k">return</span><span class="p">(((</span><span class="nx">year</span><span class="o">%</span><span class="mi">4</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">year</span><span class="o">%</span><span class="mi">100</span><span class="o">!==</span><span class="mi">0</span><span class="p">))</span><span class="o">||</span><span class="p">(</span><span class="nx">year</span><span class="o">%</span><span class="mi">400</span><span class="o">===</span><span class="mi">0</span><span class="p">));};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">year</span><span class="p">,</span><span class="nx">month</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="mi">31</span><span class="p">,(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">isLeapYear</span><span class="p">(</span><span class="nx">year</span><span class="p">)</span><span class="o">?</span><span class="mi">29</span><span class="o">:</span><span class="mi">28</span><span class="p">),</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">][</span><span class="nx">month</span><span class="p">];};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getTimezoneOffset</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">dst</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">dst</span><span class="o">||</span><span class="kc">false</span><span class="p">)</span><span class="o">?</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">abbreviatedTimeZoneDST</span><span class="p">[</span><span class="nx">s</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()]</span><span class="o">:</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">abbreviatedTimeZoneStandard</span><span class="p">[</span><span class="nx">s</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()];};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getTimezoneAbbreviation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">offset</span><span class="p">,</span><span class="nx">dst</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">(</span><span class="nx">dst</span><span class="o">||</span><span class="kc">false</span><span class="p">)</span><span class="o">?</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">abbreviatedTimeZoneDST</span><span class="o">:</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">abbreviatedTimeZoneStandard</span><span class="p">,</span><span class="nx">p</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span> <span class="k">in</span> <span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">===</span><span class="nx">offset</span><span class="p">){</span><span class="k">return</span> <span class="nx">p</span><span class="p">;}}</span></div><div class='line' id='LC12'><span class="k">return</span> <span class="kc">null</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getTime</span><span class="p">());};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">compareTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="k">this</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="k">this</span><span class="p">);}</span></div><div class='line' id='LC13'><span class="k">if</span><span class="p">(</span><span class="nx">date</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">date</span><span class="p">)){</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="o">&gt;</span><span class="nx">date</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="o">&lt;</span><span class="nx">date</span><span class="p">)</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">date</span><span class="p">);}};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">equals</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">date</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">compareTo</span><span class="p">(</span><span class="nx">date</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">between</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">start</span><span class="p">,</span><span class="nx">end</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getTime</span><span class="p">();</span><span class="k">return</span> <span class="nx">t</span><span class="o">&gt;=</span><span class="nx">start</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&lt;=</span><span class="nx">end</span><span class="p">.</span><span class="nx">getTime</span><span class="p">();};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span><span class="o">+</span><span class="nx">value</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addSeconds</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">1000</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addMinutes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">60000</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addHours</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">3600000</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addDays</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">86400000</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addWeeks</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">604800000</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addMonths</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setMonth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="nx">value</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">()));</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addYears</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMonths</span><span class="p">(</span><span class="nx">value</span><span class="o">*</span><span class="mi">12</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">config</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">config</span><span class="o">==</span><span class="s2">&quot;number&quot;</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="o">=</span><span class="nx">config</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;}</span></div><div class='line' id='LC14'><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">config</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">millisecond</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">milliseconds</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">millisecond</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">milliseconds</span><span class="p">);}</span></div><div class='line' id='LC15'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">second</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">seconds</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addSeconds</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">second</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">seconds</span><span class="p">);}</span></div><div class='line' id='LC16'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">minute</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">minutes</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMinutes</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">minute</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">minutes</span><span class="p">);}</span></div><div class='line' id='LC17'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hour</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">hours</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addHours</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hour</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">hours</span><span class="p">);}</span></div><div class='line' id='LC18'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">month</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">months</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMonths</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">month</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">months</span><span class="p">);}</span></div><div class='line' id='LC19'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">year</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">years</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addYears</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">year</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">years</span><span class="p">);}</span></div><div class='line' id='LC20'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">day</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">days</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addDays</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">day</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">days</span><span class="p">);}</span></div><div class='line' id='LC21'><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">_validate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span><span class="nx">min</span><span class="p">,</span><span class="nx">max</span><span class="p">,</span><span class="nx">name</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">value</span><span class="o">!=</span><span class="s2">&quot;number&quot;</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">value</span><span class="o">+</span><span class="s2">&quot; is not a Number.&quot;</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">value</span><span class="o">&lt;</span><span class="nx">min</span><span class="o">||</span><span class="nx">value</span><span class="o">&gt;</span><span class="nx">max</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">RangeError</span><span class="p">(</span><span class="nx">value</span><span class="o">+</span><span class="s2">&quot; is not a valid value for &quot;</span><span class="o">+</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">);}</span></div><div class='line' id='LC22'><span class="k">return</span> <span class="kc">true</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateMillisecond</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">999</span><span class="p">,</span><span class="s2">&quot;milliseconds&quot;</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateSecond</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">59</span><span class="p">,</span><span class="s2">&quot;seconds&quot;</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateMinute</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">59</span><span class="p">,</span><span class="s2">&quot;minutes&quot;</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateHour</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="s2">&quot;hours&quot;</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateDay</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">year</span><span class="p">,</span><span class="nx">month</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">(</span><span class="nx">year</span><span class="p">,</span><span class="nx">month</span><span class="p">),</span><span class="s2">&quot;days&quot;</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="s2">&quot;months&quot;</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateYear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">9999</span><span class="p">,</span><span class="s2">&quot;seconds&quot;</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">config</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">config</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">millisecond</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">millisecond</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">millisecond</span><span class="o">=-</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC23'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">second</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">second</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">second</span><span class="o">=-</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC24'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">minute</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">minute</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">minute</span><span class="o">=-</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC25'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">hour</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">hour</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">hour</span><span class="o">=-</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC26'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">day</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">day</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">day</span><span class="o">=-</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC27'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">month</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">month</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">month</span><span class="o">=-</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC28'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">year</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">year</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">year</span><span class="o">=-</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC29'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">millisecond</span><span class="o">!=-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateMillisecond</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">millisecond</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">millisecond</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">());}</span></div><div class='line' id='LC30'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">second</span><span class="o">!=-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateSecond</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">second</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addSeconds</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">second</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">());}</span></div><div class='line' id='LC31'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">minute</span><span class="o">!=-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateMinute</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">minute</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMinutes</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">minute</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">());}</span></div><div class='line' id='LC32'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hour</span><span class="o">!=-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateHour</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hour</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addHours</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hour</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">());}</span></div><div class='line' id='LC33'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">month</span><span class="o">!==-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateMonth</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">month</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addMonths</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">month</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">());}</span></div><div class='line' id='LC34'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">year</span><span class="o">!=-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateYear</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">year</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">addYears</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">year</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">());}</span></div><div class='line' id='LC35'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">day</span><span class="o">!=-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">validateDay</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">day</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">())){</span><span class="k">this</span><span class="p">.</span><span class="nx">addDays</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">day</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getDate</span><span class="p">());}</span></div><div class='line' id='LC36'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">timezone</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setTimezone</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">timezone</span><span class="p">);}</span></div><div class='line' id='LC37'><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">timezoneOffset</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setTimezoneOffset</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">timezoneOffset</span><span class="p">);}</span></div><div class='line' id='LC38'><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clearTime</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isLeapYear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();</span><span class="k">return</span><span class="p">(((</span><span class="nx">y</span><span class="o">%</span><span class="mi">4</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="o">%</span><span class="mi">100</span><span class="o">!==</span><span class="mi">0</span><span class="p">))</span><span class="o">||</span><span class="p">(</span><span class="nx">y</span><span class="o">%</span><span class="mi">400</span><span class="o">===</span><span class="mi">0</span><span class="p">));};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isWeekday</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">is</span><span class="p">().</span><span class="nx">sat</span><span class="p">()</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">is</span><span class="p">().</span><span class="nb">sun</span><span class="p">());};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">());};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">moveToFirstDayOfMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">day</span><span class="o">:</span><span class="mi">1</span><span class="p">});};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">moveToLastDayOfMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">day</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">()});};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">moveToDayOfWeek</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">day</span><span class="p">,</span><span class="nx">orient</span><span class="p">){</span><span class="kd">var</span> <span class="nx">diff</span><span class="o">=</span><span class="p">(</span><span class="nx">day</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()</span><span class="o">+</span><span class="mi">7</span><span class="o">*</span><span class="p">(</span><span class="nx">orient</span><span class="o">||+</span><span class="mi">1</span><span class="p">))</span><span class="o">%</span><span class="mi">7</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addDays</span><span class="p">((</span><span class="nx">diff</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">diff</span><span class="o">+=</span><span class="mi">7</span><span class="o">*</span><span class="p">(</span><span class="nx">orient</span><span class="o">||+</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">diff</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">moveToMonth</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">month</span><span class="p">,</span><span class="nx">orient</span><span class="p">){</span><span class="kd">var</span> <span class="nx">diff</span><span class="o">=</span><span class="p">(</span><span class="nx">month</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">12</span><span class="o">*</span><span class="p">(</span><span class="nx">orient</span><span class="o">||+</span><span class="mi">1</span><span class="p">))</span><span class="o">%</span><span class="mi">12</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addMonths</span><span class="p">((</span><span class="nx">diff</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">diff</span><span class="o">+=</span><span class="mi">12</span><span class="o">*</span><span class="p">(</span><span class="nx">orient</span><span class="o">||+</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">diff</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getDayOfYear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="k">this</span><span class="o">-</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span><span class="o">/</span><span class="mi">86400000</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getWeekOfYear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">firstDayOfWeek</span><span class="p">){</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span><span class="kd">var</span> <span class="nx">dow</span><span class="o">=</span><span class="nx">firstDayOfWeek</span><span class="o">||</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">firstDayOfWeek</span><span class="p">;</span><span class="kd">var</span> <span class="nx">offset</span><span class="o">=</span><span class="mi">7</span><span class="o">+</span><span class="mi">1</span><span class="o">-</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">getDay</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">offset</span><span class="o">==</span><span class="mi">8</span><span class="p">){</span><span class="nx">offset</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC39'><span class="kd">var</span> <span class="nx">daynum</span><span class="o">=</span><span class="p">((</span><span class="nb">Date</span><span class="p">.</span><span class="nx">UTC</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="nb">Date</span><span class="p">.</span><span class="nx">UTC</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span><span class="o">/</span><span class="mi">86400000</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">daynum</span><span class="o">-</span><span class="nx">offset</span><span class="o">+</span><span class="mi">7</span><span class="p">)</span><span class="o">/</span><span class="mi">7</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="o">===</span><span class="nx">dow</span><span class="p">){</span><span class="nx">y</span><span class="o">--</span><span class="p">;</span><span class="kd">var</span> <span class="nx">prevOffset</span><span class="o">=</span><span class="mi">7</span><span class="o">+</span><span class="mi">1</span><span class="o">-</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">getDay</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">prevOffset</span><span class="o">==</span><span class="mi">2</span><span class="o">||</span><span class="nx">prevOffset</span><span class="o">==</span><span class="mi">8</span><span class="p">){</span><span class="nx">w</span><span class="o">=</span><span class="mi">53</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">w</span><span class="o">=</span><span class="mi">52</span><span class="p">;}}</span></div><div class='line' id='LC40'><span class="k">return</span> <span class="nx">w</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isDST</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(E|C|M|P)(S|D)T/</span><span class="p">)[</span><span class="mi">2</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;D&quot;</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getTimezone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">getTimezoneAbbreviation</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCOffset</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">isDST</span><span class="p">());};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setTimezoneOffset</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">here</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getTimezoneOffset</span><span class="p">(),</span><span class="nx">there</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">*-</span><span class="mi">6</span><span class="o">/</span><span class="mi">10</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">addMinutes</span><span class="p">(</span><span class="nx">there</span><span class="o">-</span><span class="nx">here</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setTimezone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">setTimezoneOffset</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getTimezoneOffset</span><span class="p">(</span><span class="nx">s</span><span class="p">));};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getUTCOffset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getTimezoneOffset</span><span class="p">()</span><span class="o">*-</span><span class="mi">10</span><span class="o">/</span><span class="mi">6</span><span class="p">,</span><span class="nx">r</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">n</span><span class="o">-</span><span class="mi">10000</span><span class="p">).</span><span class="nx">toString</span><span class="p">();</span><span class="k">return</span> <span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="mi">10000</span><span class="p">).</span><span class="nx">toString</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;+&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">);}};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getDayName</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">abbrev</span><span class="p">){</span><span class="k">return</span> <span class="nx">abbrev</span><span class="o">?</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">abbreviatedDayNames</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()]</span><span class="o">:</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">dayNames</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()];};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getMonthName</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">abbrev</span><span class="p">){</span><span class="k">return</span> <span class="nx">abbrev</span><span class="o">?</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">abbreviatedMonthNames</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()]</span><span class="o">:</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">monthNames</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()];};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_toString</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">format</span><span class="p">){</span><span class="kd">var</span> <span class="nx">self</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">:</span><span class="nx">s</span><span class="p">;};</span><span class="k">return</span> <span class="nx">format</span><span class="o">?</span><span class="nx">format</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">format</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">format</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;hh&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">&lt;</span><span class="mi">13</span><span class="o">?</span><span class="nx">self</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">:</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">-</span><span class="mi">12</span><span class="p">));</span><span class="k">case</span><span class="s2">&quot;h&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">&lt;</span><span class="mi">13</span><span class="o">?</span><span class="nx">self</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">:</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">-</span><span class="mi">12</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;HH&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">getHours</span><span class="p">());</span><span class="k">case</span><span class="s2">&quot;H&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getHours</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;mm&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">());</span><span class="k">case</span><span class="s2">&quot;m&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;ss&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">());</span><span class="k">case</span><span class="s2">&quot;s&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;yyyy&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;yy&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">().</span><span class="nx">toString</span><span class="p">().</span><span class="nx">substring</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;dddd&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getDayName</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;ddd&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getDayName</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;dd&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">getDate</span><span class="p">());</span><span class="k">case</span><span class="s2">&quot;d&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getDate</span><span class="p">().</span><span class="nx">toString</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;MMMM&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getMonthName</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;MMM&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getMonthName</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;MM&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">p</span><span class="p">((</span><span class="nx">self</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span><span class="k">case</span><span class="s2">&quot;M&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;t&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">&lt;</span><span class="mi">12</span><span class="o">?</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">amDesignator</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">pmDesignator</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;tt&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">&lt;</span><span class="mi">12</span><span class="o">?</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">amDesignator</span><span class="o">:</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">pmDesignator</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;zzz&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;zz&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;z&quot;</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">;}})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_toString</span><span class="p">();};</span></div><div class='line' id='LC41'><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">today</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">().</span><span class="nx">clearTime</span><span class="p">();};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_orient</span><span class="o">=+</span><span class="mi">1</span><span class="p">;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="o">=+</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">last</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">prev</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">previous</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_is</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">is</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;};</span><span class="nb">Number</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_dateElement</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">;</span><span class="nb">Number</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">fromNow</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">c</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_dateElement</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">().</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">);};</span><span class="nb">Number</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ago</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">c</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_dateElement</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="o">*-</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">().</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">);};(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">$D</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">$N</span><span class="o">=</span><span class="nb">Number</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="kd">var</span> <span class="nx">dx</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;sunday monday tuesday wednesday thursday friday saturday&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">),</span><span class="nx">mx</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;january february march april may june july august september october november december&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">),</span><span class="nx">px</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;Millisecond Second Minute Hour Day Week Month Year&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">),</span><span class="nx">de</span><span class="p">;</span><span class="kd">var</span> <span class="nx">df</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()</span><span class="o">==</span><span class="nx">n</span><span class="p">;}</span></div><div class='line' id='LC42'><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">moveToDayOfWeek</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="p">);};};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">dx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">$D</span><span class="p">[</span><span class="nx">dx</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span><span class="o">=</span><span class="nx">$D</span><span class="p">[</span><span class="nx">dx</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)]</span><span class="o">=</span><span class="nx">df</span><span class="p">(</span><span class="nx">i</span><span class="p">);}</span></div><div class='line' id='LC43'><span class="kd">var</span> <span class="nx">mf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_is</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">===</span><span class="nx">n</span><span class="p">;}</span></div><div class='line' id='LC44'><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">moveToMonth</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="p">);};};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">mx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="nx">$D</span><span class="p">[</span><span class="nx">mx</span><span class="p">[</span><span class="nx">j</span><span class="p">]]</span><span class="o">=</span><span class="nx">$D</span><span class="p">[</span><span class="nx">mx</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)]</span><span class="o">=</span><span class="nx">mf</span><span class="p">(</span><span class="nx">j</span><span class="p">);}</span></div><div class='line' id='LC45'><span class="kd">var</span> <span class="nx">ef</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;s&quot;</span><span class="p">){</span><span class="nx">j</span><span class="o">+=</span><span class="s2">&quot;s&quot;</span><span class="p">;}</span></div><div class='line' id='LC46'><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="s2">&quot;add&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">](</span><span class="k">this</span><span class="p">.</span><span class="nx">_orient</span><span class="p">);};};</span><span class="kd">var</span> <span class="nx">nf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dateElement</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">;};};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="nx">de</span><span class="o">=</span><span class="nx">px</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">$D</span><span class="p">[</span><span class="nx">de</span><span class="p">]</span><span class="o">=</span><span class="nx">$D</span><span class="p">[</span><span class="nx">de</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">ef</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">k</span><span class="p">]);</span><span class="nx">$N</span><span class="p">[</span><span class="nx">de</span><span class="p">]</span><span class="o">=</span><span class="nx">$N</span><span class="p">[</span><span class="nx">de</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">nf</span><span class="p">(</span><span class="nx">de</span><span class="p">);}}());</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toJSONString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="s2">&quot;yyyy-MM-ddThh:mm:ssZ&quot;</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toShortDateString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">formatPatterns</span><span class="p">.</span><span class="nx">shortDatePattern</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toLongDateString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">formatPatterns</span><span class="p">.</span><span class="nx">longDatePattern</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toShortTimeString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">formatPatterns</span><span class="p">.</span><span class="nx">shortTimePattern</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toLongTimeString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">formatPatterns</span><span class="p">.</span><span class="nx">longTimePattern</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getOrdinal</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">switch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()){</span><span class="k">case</span> <span class="mi">1</span><span class="o">:</span><span class="k">case</span> <span class="mi">21</span><span class="o">:</span><span class="k">case</span> <span class="mi">31</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;st&quot;</span><span class="p">;</span><span class="k">case</span> <span class="mi">2</span><span class="o">:</span><span class="k">case</span> <span class="mi">22</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;nd&quot;</span><span class="p">;</span><span class="k">case</span> <span class="mi">3</span><span class="o">:</span><span class="k">case</span> <span class="mi">23</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;rd&quot;</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;th&quot;</span><span class="p">;}};</span></div><div class='line' id='LC47'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Parsing</span><span class="o">=</span><span class="p">{</span><span class="nx">Exception</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="s2">&quot;Parse error at &#39;&quot;</span><span class="o">+</span><span class="nx">s</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; ...&#39;&quot;</span><span class="p">;}};</span><span class="kd">var</span> <span class="nx">$P</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Parsing</span><span class="p">;</span><span class="kd">var</span> <span class="nx">_</span><span class="o">=</span><span class="nx">$P</span><span class="p">.</span><span class="nx">Operators</span><span class="o">=</span><span class="p">{</span><span class="nx">rtoken</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">mx</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">mx</span><span class="p">){</span><span class="k">return</span><span class="p">([</span><span class="nx">mx</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">s</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">mx</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="p">)]);}</span><span class="k">else</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);}};},</span><span class="nx">token</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^\s*&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;\s*&quot;</span><span class="p">))(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">stoken</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="nx">s</span><span class="p">));},</span><span class="nx">until</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">qx</span><span class="o">=</span><span class="p">[],</span><span class="nx">rx</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">rx</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">qx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">rx</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">s</span><span class="o">=</span><span class="nx">rx</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">continue</span><span class="p">;}</span></div><div class='line' id='LC48'><span class="k">break</span><span class="p">;}</span></div><div class='line' id='LC49'><span class="k">return</span><span class="p">[</span><span class="nx">qx</span><span class="p">,</span><span class="nx">s</span><span class="p">];};},</span><span class="nx">many</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">rx</span><span class="p">,</span><span class="nx">s</span><span class="p">];}</span></div><div class='line' id='LC50'><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">];}</span></div><div class='line' id='LC51'><span class="k">return</span><span class="p">[</span><span class="nx">rx</span><span class="p">,</span><span class="nx">s</span><span class="p">];};},</span><span class="nx">optional</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="kc">null</span><span class="p">,</span><span class="nx">s</span><span class="p">];}</span></div><div class='line' id='LC52'><span class="k">return</span><span class="p">[</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]];};},</span><span class="nx">not</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="kc">null</span><span class="p">,</span><span class="nx">s</span><span class="p">];}</span></div><div class='line' id='LC53'><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">ignore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="nx">p</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="kc">null</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]];}</span><span class="o">:</span><span class="kc">null</span><span class="p">;},</span><span class="nx">product</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">px</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">qx</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">rx</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">qx</span><span class="p">));}</span></div><div class='line' id='LC54'><span class="k">return</span> <span class="nx">rx</span><span class="p">;},</span><span class="nx">cache</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">rule</span><span class="p">){</span><span class="kd">var</span> <span class="nx">cache</span><span class="o">=</span><span class="p">{},</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">cache</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">cache</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">||</span><span class="nx">rule</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">));}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">cache</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;}</span></div><div class='line' id='LC55'><span class="k">if</span><span class="p">(</span><span class="nx">r</span> <span class="k">instanceof</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">){</span><span class="k">throw</span> <span class="nx">r</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">r</span><span class="p">;}};},</span><span class="nx">any</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">px</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="k">continue</span><span class="p">;}</span></div><div class='line' id='LC56'><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">));}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC57'><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span> <span class="nx">r</span><span class="p">;}}</span></div><div class='line' id='LC58'><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">each</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">px</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="k">continue</span><span class="p">;}</span></div><div class='line' id='LC59'><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">));}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);}</span></div><div class='line' id='LC60'><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">];}</span></div><div class='line' id='LC61'><span class="k">return</span><span class="p">[</span><span class="nx">rx</span><span class="p">,</span><span class="nx">s</span><span class="p">];};},</span><span class="nx">all</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">px</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">_</span><span class="o">=</span><span class="nx">_</span><span class="p">;</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">optional</span><span class="p">(</span><span class="nx">px</span><span class="p">));},</span><span class="nx">sequence</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">px</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^\s*/</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span> <span class="nx">px</span><span class="p">[</span><span class="mi">0</span><span class="p">];}</span></div><div class='line' id='LC62'><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">break</span><span class="p">;}</span></div><div class='line' id='LC63'><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">try</span><span class="p">{</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">ex</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">break</span><span class="p">;}</span></div><div class='line' id='LC64'><span class="nx">s</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">];}</span></div><div class='line' id='LC65'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);}</span></div><div class='line' id='LC66'><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span></div><div class='line' id='LC67'><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">ey</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}}</span></div><div class='line' id='LC68'><span class="k">return</span><span class="p">[</span><span class="nx">rx</span><span class="p">,(</span><span class="nx">r</span><span class="o">?</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">s</span><span class="p">)];};},</span><span class="nx">between</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d1</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">d2</span><span class="p">){</span><span class="nx">d2</span><span class="o">=</span><span class="nx">d2</span><span class="o">||</span><span class="nx">d1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">_fn</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">d1</span><span class="p">),</span><span class="nx">p</span><span class="p">,</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">d2</span><span class="p">));</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="nx">_fn</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span><span class="p">[[</span><span class="nx">rx</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">2</span><span class="p">]],</span><span class="nx">rx</span><span class="p">[</span><span class="mi">1</span><span class="p">]];};},</span><span class="nx">list</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^\s*/</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nx">p</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="o">?</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">product</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">d</span><span class="p">)),</span><span class="nx">p</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">many</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">d</span><span class="p">))),</span><span class="nx">px</span><span class="p">,</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">c</span><span class="p">)));},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">px</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^\s*/</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">rx</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">best</span><span class="o">=</span><span class="p">[[],</span><span class="nx">s</span><span class="p">],</span><span class="nx">last</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">last</span><span class="o">=</span><span class="p">(</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">continue</span><span class="p">;}</span></div><div class='line' id='LC69'><span class="nx">rx</span><span class="o">=</span><span class="p">[[</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]];</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">last</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">ex</span><span class="p">){</span><span class="nx">last</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="nx">last</span><span class="o">=</span><span class="kc">true</span><span class="p">;}</span></div><div class='line' id='LC70'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">last</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="nx">last</span><span class="o">=</span><span class="kc">true</span><span class="p">;}</span></div><div class='line' id='LC71'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">last</span><span class="p">){</span><span class="kd">var</span> <span class="nx">qx</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">!=</span><span class="nx">j</span><span class="p">){</span><span class="nx">qx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">j</span><span class="p">]);}}</span></div><div class='line' id='LC72'><span class="nx">p</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">qx</span><span class="p">,</span><span class="nx">d</span><span class="p">).</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">rx</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">rx</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">rx</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">];}}</span></div><div class='line' id='LC73'><span class="k">if</span><span class="p">(</span><span class="nx">rx</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">best</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="p">){</span><span class="nx">best</span><span class="o">=</span><span class="nx">rx</span><span class="p">;}</span></div><div class='line' id='LC74'><span class="k">if</span><span class="p">(</span><span class="nx">best</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">break</span><span class="p">;}}</span></div><div class='line' id='LC75'><span class="k">if</span><span class="p">(</span><span class="nx">best</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">best</span><span class="p">;}</span></div><div class='line' id='LC76'><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">best</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">ey</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">best</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span></div><div class='line' id='LC77'><span class="nx">best</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">];}</span></div><div class='line' id='LC78'><span class="k">return</span> <span class="nx">best</span><span class="p">;};},</span><span class="nx">forward</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">gr</span><span class="p">,</span><span class="nx">fname</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">gr</span><span class="p">[</span><span class="nx">fname</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">replace</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">rule</span><span class="p">,</span><span class="nx">repl</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nx">repl</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]];};},</span><span class="nx">process</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">rule</span><span class="p">,</span><span class="nx">fn</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nx">fn</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]];};},</span><span class="nx">min</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">min</span><span class="p">,</span><span class="nx">rule</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">rx</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">min</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">$P</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">s</span><span class="p">);}</span></div><div class='line' id='LC79'><span class="k">return</span> <span class="nx">rx</span><span class="p">;};}};</span><span class="kd">var</span> <span class="nx">_generator</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">op</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">args</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">rx</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="nx">args</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">instanceof</span> <span class="nb">Array</span><span class="p">){</span><span class="nx">args</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">];}</span></div><div class='line' id='LC80'><span class="k">if</span><span class="p">(</span><span class="nx">args</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">px</span><span class="o">=</span><span class="nx">args</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">px</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">args</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">px</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">op</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">args</span><span class="p">));</span><span class="nx">args</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="k">return</span> <span class="nx">rx</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">op</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);}};};</span><span class="kd">var</span> <span class="nx">gx</span><span class="o">=</span><span class="s2">&quot;optional not ignore cache&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">gx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">_</span><span class="p">[</span><span class="nx">gx</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span><span class="o">=</span><span class="nx">_generator</span><span class="p">(</span><span class="nx">_</span><span class="p">[</span><span class="nx">gx</span><span class="p">[</span><span class="nx">i</span><span class="p">]]);}</span></div><div class='line' id='LC81'><span class="kd">var</span> <span class="nx">_vector</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">op</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">instanceof</span> <span class="nb">Array</span><span class="p">){</span><span class="k">return</span> <span class="nx">op</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">op</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);}};};</span><span class="kd">var</span> <span class="nx">vx</span><span class="o">=</span><span class="s2">&quot;each any all&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">vx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="nx">_</span><span class="p">[</span><span class="nx">vx</span><span class="p">[</span><span class="nx">j</span><span class="p">]]</span><span class="o">=</span><span class="nx">_vector</span><span class="p">(</span><span class="nx">_</span><span class="p">[</span><span class="nx">vx</span><span class="p">[</span><span class="nx">j</span><span class="p">]]);}}());(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">flattenAndCompact</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">ax</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">ax</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="k">instanceof</span> <span class="nb">Array</span><span class="p">){</span><span class="nx">rx</span><span class="o">=</span><span class="nx">rx</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">flattenAndCompact</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">i</span><span class="p">]));}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">i</span><span class="p">]){</span><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">i</span><span class="p">]);}}}</span></div><div class='line' id='LC82'><span class="k">return</span> <span class="nx">rx</span><span class="p">;};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Grammar</span><span class="o">=</span><span class="p">{};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Translator</span><span class="o">=</span><span class="p">{</span><span class="nx">hour</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">minute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">minute</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">second</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">second</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">);};},</span><span class="nx">meridian</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">();};},</span><span class="nx">timezone</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^\d\+\-]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">timezoneOffset</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">timezone</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();}};},</span><span class="nx">day</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\d+/</span><span class="p">)[</span><span class="mi">0</span><span class="p">]);};},</span><span class="nx">month</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="p">((</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">3</span><span class="p">)</span><span class="o">?</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getMonthNumberFromName</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">));};},</span><span class="nx">year</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="o">=</span><span class="p">((</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="p">)</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="p">(((</span><span class="nx">n</span><span class="o">+</span><span class="mi">2000</span><span class="p">)</span><span class="o">&lt;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">twoDigitYearMax</span><span class="p">)</span><span class="o">?</span><span class="mi">2000</span><span class="o">:</span><span class="mi">1900</span><span class="p">)));};},</span><span class="nx">rday</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">switch</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;yesterday&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;tomorrow&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;today&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;now&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">break</span><span class="p">;}};},</span><span class="nx">finishExact</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="p">(</span><span class="nx">x</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">)</span><span class="o">?</span><span class="nx">x</span><span class="o">:</span><span class="p">[</span><span class="nx">x</span><span class="p">];</span><span class="kd">var</span> <span class="nx">now</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="o">=</span><span class="nx">now</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="nx">now</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">minute</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">second</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">i</span><span class="p">]){</span><span class="nx">x</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);}}</span></div><div class='line' id='LC83'><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">==</span><span class="s2">&quot;p&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">&lt;</span><span class="mi">13</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">+</span><span class="mi">12</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">&gt;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">RangeError</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">+</span><span class="s2">&quot; is not a valid value for days.&quot;</span><span class="p">);}</span></div><div class='line' id='LC84'><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">year</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">minute</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">second</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timezone</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">timezone</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">timezone</span><span class="p">});}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timezoneOffset</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">timezoneOffset</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">timezoneOffset</span><span class="p">});}</span></div><div class='line' id='LC85'><span class="k">return</span> <span class="nx">r</span><span class="p">;},</span><span class="nx">finish</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="p">(</span><span class="nx">x</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">)</span><span class="o">?</span><span class="nx">flattenAndCompact</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="o">:</span><span class="p">[</span><span class="nx">x</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC86'><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">x</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="nx">x</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);}}</span></div><div class='line' id='LC87'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();}</span></div><div class='line' id='LC88'><span class="kd">var</span> <span class="nx">today</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">today</span><span class="p">();</span><span class="kd">var</span> <span class="nx">method</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">expression</span><span class="o">=!!</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">!=</span><span class="kc">null</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">orient</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">expression</span><span class="p">){</span><span class="kd">var</span> <span class="nx">gap</span><span class="p">,</span><span class="nx">mod</span><span class="p">,</span><span class="nx">orient</span><span class="p">;</span><span class="nx">orient</span><span class="o">=</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">orient</span><span class="o">==</span><span class="s2">&quot;past&quot;</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="o">==</span><span class="s2">&quot;subtract&quot;</span><span class="p">)</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">;</span><span class="nx">gap</span><span class="o">=</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getDayNumberFromName</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="p">)</span><span class="o">-</span><span class="nx">today</span><span class="p">.</span><span class="nx">getDay</span><span class="p">());</span><span class="nx">mod</span><span class="o">=</span><span class="mi">7</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">days</span><span class="o">=</span><span class="nx">gap</span><span class="o">?</span><span class="p">((</span><span class="nx">gap</span><span class="o">+</span><span class="p">(</span><span class="nx">orient</span><span class="o">*</span><span class="nx">mod</span><span class="p">))</span><span class="o">%</span><span class="nx">mod</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">orient</span><span class="o">*</span><span class="nx">mod</span><span class="p">);}</span></div><div class='line' id='LC89'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="s2">&quot;month&quot;</span><span class="p">;</span><span class="nx">gap</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">-</span><span class="nx">today</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">());</span><span class="nx">mod</span><span class="o">=</span><span class="mi">12</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">months</span><span class="o">=</span><span class="nx">gap</span><span class="o">?</span><span class="p">((</span><span class="nx">gap</span><span class="o">+</span><span class="p">(</span><span class="nx">orient</span><span class="o">*</span><span class="nx">mod</span><span class="p">))</span><span class="o">%</span><span class="nx">mod</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">orient</span><span class="o">*</span><span class="nx">mod</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC90'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">;}</span></div><div class='line' id='LC91'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC92'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">==</span><span class="s2">&quot;week&quot;</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">*</span><span class="mi">7</span><span class="p">;}</span></div><div class='line' id='LC93'><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">+</span><span class="s2">&quot;s&quot;</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">*</span><span class="nx">orient</span><span class="p">;}</span></div><div class='line' id='LC94'><span class="k">return</span> <span class="nx">today</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">&lt;</span><span class="mi">13</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">meridian</span><span class="o">==</span><span class="s2">&quot;p&quot;</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="o">+</span><span class="mi">12</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">hour</span><span class="p">;}</span></div><div class='line' id='LC95'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="p">(</span><span class="nx">today</span><span class="p">.</span><span class="nx">addDays</span><span class="p">((</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getDayNumberFromName</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="p">)</span><span class="o">-</span><span class="nx">today</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()))).</span><span class="nx">getDate</span><span class="p">();}</span></div><div class='line' id='LC96'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">month</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span></div><div class='line' id='LC97'><span class="k">return</span> <span class="nx">today</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="k">this</span><span class="p">);}}};</span><span class="kd">var</span> <span class="nx">_</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Parsing</span><span class="p">.</span><span class="nx">Operators</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Grammar</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Translator</span><span class="p">,</span><span class="nx">_fn</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">datePartDelimiter</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([\s\-\.\,\/\x27]+)/</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">timePartDelimiter</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">stoken</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">whiteSpace</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^\s*/</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">generalDelimiter</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(([\s\,]|at|on)+)/</span><span class="p">);</span><span class="kd">var</span> <span class="nx">_C</span><span class="o">=</span><span class="p">{};</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">keys</span><span class="p">){</span><span class="kd">var</span> <span class="nx">fn</span><span class="o">=</span><span class="nx">_C</span><span class="p">[</span><span class="nx">keys</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">fn</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">regexPatterns</span><span class="p">;</span><span class="kd">var</span> <span class="nx">kx</span><span class="o">=</span><span class="nx">keys</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">),</span><span class="nx">px</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">kx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">px</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">kx</span><span class="p">[</span><span class="nx">i</span><span class="p">]]),</span><span class="nx">kx</span><span class="p">[</span><span class="nx">i</span><span class="p">]));}</span></div><div class='line' id='LC98'><span class="nx">fn</span><span class="o">=</span><span class="nx">_C</span><span class="p">[</span><span class="nx">keys</span><span class="p">]</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">any</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">px</span><span class="p">);}</span></div><div class='line' id='LC99'><span class="k">return</span> <span class="nx">fn</span><span class="p">;};</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">key</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">regexPatterns</span><span class="p">[</span><span class="nx">key</span><span class="p">]);};</span><span class="nx">g</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(0[0-9]|1[0-2]|[1-9])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">hour</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">hh</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(0[0-9]|1[0-2])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">hour</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">H</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-1][0-9]|2[0-3]|[0-9])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">hour</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">HH</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-1][0-9]|2[0-3])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">hour</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">m</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-5][0-9]|[0-9])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">minute</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">mm</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^[0-5][0-9]/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">minute</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-5][0-9]|[0-9])/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">second</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">ss</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^[0-5][0-9]/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">second</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">hms</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">sequence</span><span class="p">([</span><span class="nx">g</span><span class="p">.</span><span class="nx">H</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">mm</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">ss</span><span class="p">],</span><span class="nx">g</span><span class="p">.</span><span class="nx">timePartDelimiter</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">t</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;shortMeridian&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">meridian</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">tt</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;longMeridian&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">meridian</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">z</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(\+|\-)?\s*\d\d\d\d?/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">timezone</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">zz</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(\+|\-)\s*\d\d\d\d/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">timezone</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">zzz</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;timezone&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">timezone</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">timeSuffix</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">whiteSpace</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">set</span><span class="p">([</span><span class="nx">g</span><span class="p">.</span><span class="nx">tt</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">zzz</span><span class="p">]));</span><span class="nx">g</span><span class="p">.</span><span class="nx">time</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">optional</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">stoken</span><span class="p">(</span><span class="s2">&quot;T&quot;</span><span class="p">))),</span><span class="nx">g</span><span class="p">.</span><span class="nx">hms</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">timeSuffix</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-2]\d|3[0-1]|\d)/</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">optional</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;ordinalSuffix&quot;</span><span class="p">))),</span><span class="nx">t</span><span class="p">.</span><span class="nx">day</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">dd</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^([0-2]\d|3[0-1])/</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">optional</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;ordinalSuffix&quot;</span><span class="p">))),</span><span class="nx">t</span><span class="p">.</span><span class="nx">day</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">ddd</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dddd</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;sun mon tue wed thu fri sat&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">weekday</span><span class="o">=</span><span class="nx">s</span><span class="p">;};}));</span><span class="nx">g</span><span class="p">.</span><span class="nx">M</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(1[0-2]|0\d|\d)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">month</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">MM</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(1[0-2]|0\d)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">month</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">MMM</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">MMMM</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;jan feb mar apr may jun jul aug sep oct nov dec&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">month</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(\d\d?)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">year</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">yy</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(\d\d)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">year</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">yyy</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(\d\d?\d?\d?)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">year</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">yyyy</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(\d\d\d\d)/</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">year</span><span class="p">));</span><span class="nx">_fn</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">any</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">not</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken2</span><span class="p">(</span><span class="s2">&quot;timeContext&quot;</span><span class="p">)));};</span><span class="nx">g</span><span class="p">.</span><span class="nx">day</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">dd</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">month</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">M</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">MMM</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">year</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">yyyy</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">yy</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">orientation</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;past future&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">orient</span><span class="o">=</span><span class="nx">s</span><span class="p">;};});</span><span class="nx">g</span><span class="p">.</span><span class="nx">operator</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;add subtract&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">operator</span><span class="o">=</span><span class="nx">s</span><span class="p">;};});</span><span class="nx">g</span><span class="p">.</span><span class="nx">rday</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;yesterday tomorrow today now&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">rday</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ctoken</span><span class="p">(</span><span class="s2">&quot;minute hour day week month year&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="nx">s</span><span class="p">;};});</span><span class="nx">g</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^\d\d?(st|nd|rd|th)?/</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\D/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);};});</span><span class="nx">g</span><span class="p">.</span><span class="nx">expression</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">set</span><span class="p">([</span><span class="nx">g</span><span class="p">.</span><span class="nx">rday</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">operator</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">unit</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">orientation</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">ddd</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">MMM</span><span class="p">]);</span><span class="nx">_fn</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">datePartDelimiter</span><span class="p">);};</span><span class="nx">g</span><span class="p">.</span><span class="nx">mdy</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ddd</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">month</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">day</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">year</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">ymd</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ddd</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">year</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">month</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">day</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">dmy</span><span class="o">=</span><span class="nx">_fn</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ddd</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">day</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">month</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">year</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">date</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span><span class="p">((</span><span class="nx">g</span><span class="p">[</span><span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">dateElementOrder</span><span class="p">]</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">mdy</span><span class="p">).</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">));};</span><span class="nx">g</span><span class="p">.</span><span class="nx">format</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">many</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">any</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">fmt</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">fmt</span><span class="p">]){</span><span class="k">return</span> <span class="nx">g</span><span class="p">[</span><span class="nx">fmt</span><span class="p">];}</span><span class="k">else</span><span class="p">{</span><span class="k">throw</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">Parsing</span><span class="p">.</span><span class="nx">Exception</span><span class="p">(</span><span class="nx">fmt</span><span class="p">);}}),</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">rtoken</span><span class="p">(</span><span class="sr">/^[^dMyhHmstz]+/</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">ignore</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">stoken</span><span class="p">(</span><span class="nx">s</span><span class="p">));}))),</span><span class="kd">function</span><span class="p">(</span><span class="nx">rules</span><span class="p">){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">rules</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">finishExact</span><span class="p">);});</span><span class="kd">var</span> <span class="nx">_F</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">_get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">_F</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">_F</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">f</span><span class="p">)[</span><span class="mi">0</span><span class="p">]);};</span><span class="nx">g</span><span class="p">.</span><span class="nx">formats</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">fx</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">fx</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">){</span><span class="kd">var</span> <span class="nx">rx</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">fx</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">rx</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">_get</span><span class="p">(</span><span class="nx">fx</span><span class="p">[</span><span class="nx">i</span><span class="p">]));}</span></div><div class='line' id='LC100'><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">any</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">rx</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">_get</span><span class="p">(</span><span class="nx">fx</span><span class="p">);}};</span><span class="nx">g</span><span class="p">.</span><span class="nx">_formats</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">formats</span><span class="p">([</span><span class="s2">&quot;yyyy-MM-ddTHH:mm:ss&quot;</span><span class="p">,</span><span class="s2">&quot;ddd, MMM dd, yyyy H:mm:ss tt&quot;</span><span class="p">,</span><span class="s2">&quot;ddd MMM d yyyy HH:mm:ss zzz&quot;</span><span class="p">,</span><span class="s2">&quot;d&quot;</span><span class="p">]);</span><span class="nx">g</span><span class="p">.</span><span class="nx">_start</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">set</span><span class="p">([</span><span class="nx">g</span><span class="p">.</span><span class="nx">date</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">time</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">expression</span><span class="p">],</span><span class="nx">g</span><span class="p">.</span><span class="nx">generalDelimiter</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">whiteSpace</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">finish</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">_formats</span><span class="p">.</span><span class="nx">call</span><span class="p">({},</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">r</span><span class="p">;}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span></div><div class='line' id='LC101'><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">_start</span><span class="p">.</span><span class="nx">call</span><span class="p">({},</span><span class="nx">s</span><span class="p">);};}());</span><span class="nb">Date</span><span class="p">.</span><span class="nx">_parse</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="p">;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC102'><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Grammar</span><span class="p">.</span><span class="nx">start</span><span class="p">.</span><span class="nx">call</span><span class="p">({},</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC103'><span class="k">return</span><span class="p">((</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">);};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getParseFunction</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">fx</span><span class="p">){</span><span class="kd">var</span> <span class="nx">fn</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">Grammar</span><span class="p">.</span><span class="nx">formats</span><span class="p">(</span><span class="nx">fx</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">fn</span><span class="p">.</span><span class="nx">call</span><span class="p">({},</span><span class="nx">s</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span></div><div class='line' id='LC104'><span class="k">return</span><span class="p">((</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">);};};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parseExact</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">fx</span><span class="p">){</span><span class="k">return</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">getParseFunction</span><span class="p">(</span><span class="nx">fx</span><span class="p">)(</span><span class="nx">s</span><span class="p">);};</span></div><div class='line' id='LC105'><br/></div><div class='line' id='LC106'><br/></div><div class='line' id='LC107'><span class="cm">/**</span></div><div class='line' id='LC108'><span class="cm"> * @version: 1.0 Alpha-1</span></div><div class='line' id='LC109'><span class="cm"> * @author: Coolite Inc. http://www.coolite.com/</span></div><div class='line' id='LC110'><span class="cm"> * @date: 2008-04-13</span></div><div class='line' id='LC111'><span class="cm"> * @copyright: Copyright (c) 2006-2008, Coolite Inc. (http://www.coolite.com/). All rights reserved.</span></div><div class='line' id='LC112'><span class="cm"> * @license: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. </span></div><div class='line' id='LC113'><span class="cm"> * @website: http://www.datejs.com/</span></div><div class='line' id='LC114'><span class="cm"> */</span></div><div class='line' id='LC115'>&nbsp;</div><div class='line' id='LC116'><span class="cm">/* </span></div><div class='line' id='LC117'><span class="cm"> * TimeSpan(milliseconds);</span></div><div class='line' id='LC118'><span class="cm"> * TimeSpan(days, hours, minutes, seconds);</span></div><div class='line' id='LC119'><span class="cm"> * TimeSpan(days, hours, minutes, seconds, milliseconds);</span></div><div class='line' id='LC120'><span class="cm"> */</span></div><div class='line' id='LC121'><span class="kd">var</span> <span class="nx">TimeSpan</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">days</span><span class="p">,</span> <span class="nx">hours</span><span class="p">,</span> <span class="nx">minutes</span><span class="p">,</span> <span class="nx">seconds</span><span class="p">,</span> <span class="nx">milliseconds</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC122'>	<span class="kd">var</span> <span class="nx">attrs</span> <span class="o">=</span> <span class="s2">&quot;days hours minutes seconds milliseconds&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span></div><div class='line' id='LC123'><br/></div><div class='line' id='LC124'>	<span class="kd">var</span> <span class="nx">gFn</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">attr</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC125'>		<span class="k">return</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> </div><div class='line' id='LC126'>			<span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">attr</span><span class="p">];</span> </div><div class='line' id='LC127'>		<span class="p">};</span> </div><div class='line' id='LC128'>	<span class="p">};</span></div><div class='line' id='LC129'><br/></div><div class='line' id='LC130'>	<span class="kd">var</span> <span class="nx">sFn</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">attr</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC131'>		<span class="k">return</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">val</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC132'>			<span class="k">this</span><span class="p">[</span><span class="nx">attr</span><span class="p">]</span> <span class="o">=</span> <span class="nx">val</span><span class="p">;</span> </div><div class='line' id='LC133'>			<span class="k">return</span> <span class="k">this</span><span class="p">;</span> </div><div class='line' id='LC134'>		<span class="p">};</span> </div><div class='line' id='LC135'>	<span class="p">};</span></div><div class='line' id='LC136'><br/></div><div class='line' id='LC137'>	<span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">attrs</span><span class="p">.</span><span class="nx">length</span> <span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC138'>		<span class="kd">var</span> <span class="nx">$a</span> <span class="o">=</span> <span class="nx">attrs</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">$b</span> <span class="o">=</span> <span class="nx">$a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="o">+</span> <span class="nx">$a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span></div><div class='line' id='LC139'>		<span class="nx">TimeSpan</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">$a</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC140'>		<span class="nx">TimeSpan</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="s2">&quot;get&quot;</span> <span class="o">+</span> <span class="nx">$b</span><span class="p">]</span> <span class="o">=</span> <span class="nx">gFn</span><span class="p">(</span><span class="nx">$a</span><span class="p">);</span></div><div class='line' id='LC141'>		<span class="nx">TimeSpan</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="s2">&quot;set&quot;</span> <span class="o">+</span> <span class="nx">$b</span><span class="p">]</span> <span class="o">=</span> <span class="nx">sFn</span><span class="p">(</span><span class="nx">$a</span><span class="p">);</span></div><div class='line' id='LC142'>	<span class="p">}</span></div><div class='line' id='LC143'><br/></div><div class='line' id='LC144'>	<span class="k">if</span> <span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">4</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC145'>		<span class="k">this</span><span class="p">.</span><span class="nx">setDays</span><span class="p">(</span><span class="nx">days</span><span class="p">);</span> </div><div class='line' id='LC146'>		<span class="k">this</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">hours</span><span class="p">);</span> </div><div class='line' id='LC147'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="nx">minutes</span><span class="p">);</span> </div><div class='line' id='LC148'>		<span class="k">this</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="nx">seconds</span><span class="p">);</span> </div><div class='line' id='LC149'>	<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">5</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC150'>		<span class="k">this</span><span class="p">.</span><span class="nx">setDays</span><span class="p">(</span><span class="nx">days</span><span class="p">);</span> </div><div class='line' id='LC151'>		<span class="k">this</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">hours</span><span class="p">);</span> </div><div class='line' id='LC152'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="nx">minutes</span><span class="p">);</span> </div><div class='line' id='LC153'>		<span class="k">this</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="nx">seconds</span><span class="p">);</span> </div><div class='line' id='LC154'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="nx">milliseconds</span><span class="p">);</span> </div><div class='line' id='LC155'>	<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="k">typeof</span> <span class="nx">days</span> <span class="o">==</span> <span class="s2">&quot;number&quot;</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC156'>		<span class="kd">var</span> <span class="nx">orient</span> <span class="o">=</span> <span class="p">(</span><span class="nx">days</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="o">-</span><span class="mi">1</span> <span class="o">:</span> <span class="o">+</span><span class="mi">1</span><span class="p">;</span></div><div class='line' id='LC157'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">days</span><span class="p">));</span></div><div class='line' id='LC158'><br/></div><div class='line' id='LC159'>		<span class="k">this</span><span class="p">.</span><span class="nx">setDays</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span> <span class="o">/</span> <span class="mi">86400000</span><span class="p">)</span> <span class="o">*</span> <span class="nx">orient</span><span class="p">);</span></div><div class='line' id='LC160'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span> <span class="o">%</span> <span class="mi">86400000</span><span class="p">);</span></div><div class='line' id='LC161'><br/></div><div class='line' id='LC162'>		<span class="k">this</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span> <span class="o">/</span> <span class="mi">3600000</span><span class="p">)</span> <span class="o">*</span> <span class="nx">orient</span><span class="p">);</span></div><div class='line' id='LC163'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span> <span class="o">%</span> <span class="mi">3600000</span><span class="p">);</span></div><div class='line' id='LC164'><br/></div><div class='line' id='LC165'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span> <span class="o">/</span> <span class="mi">60000</span><span class="p">)</span> <span class="o">*</span> <span class="nx">orient</span><span class="p">);</span></div><div class='line' id='LC166'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span> <span class="o">%</span> <span class="mi">60000</span><span class="p">);</span></div><div class='line' id='LC167'><br/></div><div class='line' id='LC168'>		<span class="k">this</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span> <span class="o">/</span> <span class="mi">1000</span><span class="p">)</span> <span class="o">*</span> <span class="nx">orient</span><span class="p">);</span></div><div class='line' id='LC169'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span> <span class="o">%</span> <span class="mi">1000</span><span class="p">);</span></div><div class='line' id='LC170'><br/></div><div class='line' id='LC171'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">()</span> <span class="o">*</span> <span class="nx">orient</span><span class="p">);</span></div><div class='line' id='LC172'>	<span class="p">}</span></div><div class='line' id='LC173'><br/></div><div class='line' id='LC174'>	<span class="k">this</span><span class="p">.</span><span class="nx">getTotalMilliseconds</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span></div><div class='line' id='LC175'>		<span class="k">return</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getDays</span><span class="p">()</span> <span class="o">*</span> <span class="mi">86400000</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span> <span class="o">*</span> <span class="mi">3600000</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">()</span> <span class="o">*</span> <span class="mi">60000</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">);</span> </div><div class='line' id='LC176'>	<span class="p">};</span></div><div class='line' id='LC177'><br/></div><div class='line' id='LC178'>	<span class="k">this</span><span class="p">.</span><span class="nx">compareTo</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">time</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC179'>		<span class="kd">var</span> <span class="nx">t1</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="mi">1970</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">(),</span> <span class="k">this</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">(),</span> <span class="k">this</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()),</span> <span class="nx">t2</span><span class="p">;</span></div><div class='line' id='LC180'>		<span class="k">if</span> <span class="p">(</span><span class="nx">time</span> <span class="o">===</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC181'>			<span class="nx">t2</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="mi">1970</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> </div><div class='line' id='LC182'>		<span class="p">}</span></div><div class='line' id='LC183'>		<span class="k">else</span> <span class="p">{</span></div><div class='line' id='LC184'>			<span class="nx">t2</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="mi">1970</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">time</span><span class="p">.</span><span class="nx">getHours</span><span class="p">(),</span> <span class="nx">time</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">(),</span> <span class="nx">time</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">());</span></div><div class='line' id='LC185'>		<span class="p">}</span></div><div class='line' id='LC186'>		<span class="k">return</span> <span class="p">(</span><span class="nx">t1</span> <span class="o">&lt;</span> <span class="nx">t2</span><span class="p">)</span> <span class="o">?</span> <span class="o">-</span><span class="mi">1</span> <span class="o">:</span> <span class="p">(</span><span class="nx">t1</span> <span class="o">&gt;</span> <span class="nx">t2</span><span class="p">)</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC187'>	<span class="p">};</span></div><div class='line' id='LC188'><br/></div><div class='line' id='LC189'>	<span class="k">this</span><span class="p">.</span><span class="nx">equals</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">time</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC190'>		<span class="k">return</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">compareTo</span><span class="p">(</span><span class="nx">time</span><span class="p">)</span> <span class="o">===</span> <span class="mi">0</span><span class="p">);</span></div><div class='line' id='LC191'>	<span class="p">};</span>    </div><div class='line' id='LC192'><br/></div><div class='line' id='LC193'>	<span class="k">this</span><span class="p">.</span><span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">time</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC194'>		<span class="k">return</span> <span class="p">(</span><span class="nx">time</span> <span class="o">===</span> <span class="kc">null</span><span class="p">)</span> <span class="o">?</span> <span class="k">this</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">addSeconds</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">getTotalMilliseconds</span><span class="p">()</span> <span class="o">/</span> <span class="mi">1000</span><span class="p">);</span> </div><div class='line' id='LC195'>	<span class="p">};</span></div><div class='line' id='LC196'><br/></div><div class='line' id='LC197'>	<span class="k">this</span><span class="p">.</span><span class="nx">subtract</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">time</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC198'>		<span class="k">return</span> <span class="p">(</span><span class="nx">time</span> <span class="o">===</span> <span class="kc">null</span><span class="p">)</span> <span class="o">?</span> <span class="k">this</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">addSeconds</span><span class="p">(</span><span class="o">-</span><span class="nx">time</span><span class="p">.</span><span class="nx">getTotalMilliseconds</span><span class="p">()</span> <span class="o">/</span> <span class="mi">1000</span><span class="p">);</span> </div><div class='line' id='LC199'>	<span class="p">};</span></div><div class='line' id='LC200'><br/></div><div class='line' id='LC201'>	<span class="k">this</span><span class="p">.</span><span class="nx">addDays</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC202'>		<span class="k">return</span> <span class="k">new</span> <span class="nx">TimeSpan</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getTotalMilliseconds</span><span class="p">()</span> <span class="o">+</span> <span class="p">(</span><span class="nx">n</span> <span class="o">*</span> <span class="mi">86400000</span><span class="p">));</span> </div><div class='line' id='LC203'>	<span class="p">};</span></div><div class='line' id='LC204'><br/></div><div class='line' id='LC205'>	<span class="k">this</span><span class="p">.</span><span class="nx">addHours</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC206'>		<span class="k">return</span> <span class="k">new</span> <span class="nx">TimeSpan</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getTotalMilliseconds</span><span class="p">()</span> <span class="o">+</span> <span class="p">(</span><span class="nx">n</span> <span class="o">*</span> <span class="mi">3600000</span><span class="p">));</span> </div><div class='line' id='LC207'>	<span class="p">};</span></div><div class='line' id='LC208'><br/></div><div class='line' id='LC209'>	<span class="k">this</span><span class="p">.</span><span class="nx">addMinutes</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC210'>		<span class="k">return</span> <span class="k">new</span> <span class="nx">TimeSpan</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getTotalMilliseconds</span><span class="p">()</span> <span class="o">+</span> <span class="p">(</span><span class="nx">n</span> <span class="o">*</span> <span class="mi">60000</span><span class="p">));</span> </div><div class='line' id='LC211'>	<span class="p">};</span></div><div class='line' id='LC212'><br/></div><div class='line' id='LC213'>	<span class="k">this</span><span class="p">.</span><span class="nx">addSeconds</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC214'>		<span class="k">return</span> <span class="k">new</span> <span class="nx">TimeSpan</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getTotalMilliseconds</span><span class="p">()</span> <span class="o">+</span> <span class="p">(</span><span class="nx">n</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">));</span> </div><div class='line' id='LC215'>	<span class="p">};</span></div><div class='line' id='LC216'><br/></div><div class='line' id='LC217'>	<span class="k">this</span><span class="p">.</span><span class="nx">addMilliseconds</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC218'>		<span class="k">return</span> <span class="k">new</span> <span class="nx">TimeSpan</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getTotalMilliseconds</span><span class="p">()</span> <span class="o">+</span> <span class="nx">n</span><span class="p">);</span> </div><div class='line' id='LC219'>	<span class="p">};</span></div><div class='line' id='LC220'><br/></div><div class='line' id='LC221'>	<span class="k">this</span><span class="p">.</span><span class="nx">get12HourHour</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span></div><div class='line' id='LC222'>		<span class="k">return</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">12</span><span class="p">)</span> <span class="o">?</span> <span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span> <span class="o">-</span> <span class="mi">12</span> <span class="o">:</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="mi">12</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">();</span></div><div class='line' id='LC223'>	<span class="p">};</span></div><div class='line' id='LC224'><br/></div><div class='line' id='LC225'>	<span class="k">this</span><span class="p">.</span><span class="nx">getDesignator</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> </div><div class='line' id='LC226'>		<span class="k">return</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span> <span class="o">&lt;</span> <span class="mi">12</span><span class="p">)</span> <span class="o">?</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">amDesignator</span> <span class="o">:</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">pmDesignator</span><span class="p">;</span></div><div class='line' id='LC227'>	<span class="p">};</span></div><div class='line' id='LC228'><br/></div><div class='line' id='LC229'>	<span class="k">this</span><span class="p">.</span><span class="nx">toString</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">format</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC230'>		<span class="k">this</span><span class="p">.</span><span class="nx">_toString</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span></div><div class='line' id='LC231'>			<span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getDays</span><span class="p">()</span> <span class="o">!==</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">getDays</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC232'>				<span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getDays</span><span class="p">()</span> <span class="o">+</span> <span class="s2">&quot;.&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">());</span></div><div class='line' id='LC233'>			<span class="p">}</span></div><div class='line' id='LC234'>			<span class="k">else</span> <span class="p">{</span> </div><div class='line' id='LC235'>				<span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">());</span></div><div class='line' id='LC236'>			<span class="p">}</span></div><div class='line' id='LC237'>		<span class="p">};</span></div><div class='line' id='LC238'><br/></div><div class='line' id='LC239'>		<span class="k">this</span><span class="p">.</span><span class="nx">p</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC240'>			<span class="k">return</span> <span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">length</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;0&quot;</span> <span class="o">+</span> <span class="nx">s</span> <span class="o">:</span> <span class="nx">s</span><span class="p">;</span></div><div class='line' id='LC241'>		<span class="p">};</span></div><div class='line' id='LC242'><br/></div><div class='line' id='LC243'>		<span class="kd">var</span> <span class="nx">me</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span></div><div class='line' id='LC244'><br/></div><div class='line' id='LC245'>		<span class="k">return</span> <span class="nx">format</span> <span class="o">?</span> <span class="nx">format</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/dd?|HH?|hh?|mm?|ss?|tt?/g</span><span class="p">,</span> </div><div class='line' id='LC246'>		<span class="kd">function</span> <span class="p">(</span><span class="nx">format</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC247'>			<span class="k">switch</span> <span class="p">(</span><span class="nx">format</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC248'>			<span class="k">case</span> <span class="s2">&quot;d&quot;</span><span class="o">:</span>	</div><div class='line' id='LC249'>				<span class="k">return</span> <span class="nx">me</span><span class="p">.</span><span class="nx">getDays</span><span class="p">();</span></div><div class='line' id='LC250'>			<span class="k">case</span> <span class="s2">&quot;dd&quot;</span><span class="o">:</span>	</div><div class='line' id='LC251'>				<span class="k">return</span> <span class="nx">me</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">me</span><span class="p">.</span><span class="nx">getDays</span><span class="p">());</span></div><div class='line' id='LC252'>			<span class="k">case</span> <span class="s2">&quot;H&quot;</span><span class="o">:</span>	</div><div class='line' id='LC253'>				<span class="k">return</span> <span class="nx">me</span><span class="p">.</span><span class="nx">getHours</span><span class="p">();</span></div><div class='line' id='LC254'>			<span class="k">case</span> <span class="s2">&quot;HH&quot;</span><span class="o">:</span>	</div><div class='line' id='LC255'>				<span class="k">return</span> <span class="nx">me</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">me</span><span class="p">.</span><span class="nx">getHours</span><span class="p">());</span></div><div class='line' id='LC256'>			<span class="k">case</span> <span class="s2">&quot;h&quot;</span><span class="o">:</span>	</div><div class='line' id='LC257'>				<span class="k">return</span> <span class="nx">me</span><span class="p">.</span><span class="nx">get12HourHour</span><span class="p">();</span></div><div class='line' id='LC258'>			<span class="k">case</span> <span class="s2">&quot;hh&quot;</span><span class="o">:</span>	</div><div class='line' id='LC259'>				<span class="k">return</span> <span class="nx">me</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">me</span><span class="p">.</span><span class="nx">get12HourHour</span><span class="p">());</span></div><div class='line' id='LC260'>			<span class="k">case</span> <span class="s2">&quot;m&quot;</span><span class="o">:</span>	</div><div class='line' id='LC261'>				<span class="k">return</span> <span class="nx">me</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">();</span></div><div class='line' id='LC262'>			<span class="k">case</span> <span class="s2">&quot;mm&quot;</span><span class="o">:</span>	</div><div class='line' id='LC263'>				<span class="k">return</span> <span class="nx">me</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">me</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">());</span></div><div class='line' id='LC264'>			<span class="k">case</span> <span class="s2">&quot;s&quot;</span><span class="o">:</span>	</div><div class='line' id='LC265'>				<span class="k">return</span> <span class="nx">me</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">();</span></div><div class='line' id='LC266'>			<span class="k">case</span> <span class="s2">&quot;ss&quot;</span><span class="o">:</span>	</div><div class='line' id='LC267'>				<span class="k">return</span> <span class="nx">me</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">me</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">());</span></div><div class='line' id='LC268'>			<span class="k">case</span> <span class="s2">&quot;t&quot;</span><span class="o">:</span>	</div><div class='line' id='LC269'>				<span class="k">return</span> <span class="p">((</span><span class="nx">me</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span> <span class="o">&lt;</span> <span class="mi">12</span><span class="p">)</span> <span class="o">?</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">amDesignator</span> <span class="o">:</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">pmDesignator</span><span class="p">).</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span></div><div class='line' id='LC270'>			<span class="k">case</span> <span class="s2">&quot;tt&quot;</span><span class="o">:</span>	</div><div class='line' id='LC271'>				<span class="k">return</span> <span class="p">(</span><span class="nx">me</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span> <span class="o">&lt;</span> <span class="mi">12</span><span class="p">)</span> <span class="o">?</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">amDesignator</span> <span class="o">:</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">CultureInfo</span><span class="p">.</span><span class="nx">pmDesignator</span><span class="p">;</span></div><div class='line' id='LC272'>			<span class="p">}</span></div><div class='line' id='LC273'>		<span class="p">}</span></div><div class='line' id='LC274'>		<span class="p">)</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">_toString</span><span class="p">();</span></div><div class='line' id='LC275'>	<span class="p">};</span></div><div class='line' id='LC276'>	<span class="k">return</span> <span class="k">this</span><span class="p">;</span></div><div class='line' id='LC277'><span class="p">};</span>    </div><div class='line' id='LC278'><br/></div><div class='line' id='LC279'><span class="cm">/**</span></div><div class='line' id='LC280'><span class="cm"> * Gets the time of day for this date instances. </span></div><div class='line' id='LC281'><span class="cm"> * @return {TimeSpan} TimeSpan</span></div><div class='line' id='LC282'><span class="cm"> */</span></div><div class='line' id='LC283'><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getTimeOfDay</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span></div><div class='line' id='LC284'>	<span class="k">return</span> <span class="k">new</span> <span class="nx">TimeSpan</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">getHours</span><span class="p">(),</span> <span class="k">this</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">(),</span> <span class="k">this</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">(),</span> <span class="k">this</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">());</span></div><div class='line' id='LC285'><span class="p">};</span></div><div class='line' id='LC286'><br/></div><div class='line' id='LC287'><span class="cm">/* </span></div><div class='line' id='LC288'><span class="cm"> * TimePeriod(startDate, endDate);</span></div><div class='line' id='LC289'><span class="cm"> * TimePeriod(years, months, days, hours, minutes, seconds, milliseconds);</span></div><div class='line' id='LC290'><span class="cm"> */</span></div><div class='line' id='LC291'><span class="kd">var</span> <span class="nx">TimePeriod</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">years</span><span class="p">,</span> <span class="nx">months</span><span class="p">,</span> <span class="nx">days</span><span class="p">,</span> <span class="nx">hours</span><span class="p">,</span> <span class="nx">minutes</span><span class="p">,</span> <span class="nx">seconds</span><span class="p">,</span> <span class="nx">milliseconds</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC292'>	<span class="kd">var</span> <span class="nx">attrs</span> <span class="o">=</span> <span class="s2">&quot;years months days hours minutes seconds milliseconds&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span></div><div class='line' id='LC293'><br/></div><div class='line' id='LC294'>	<span class="kd">var</span> <span class="nx">gFn</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">attr</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC295'>		<span class="k">return</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> </div><div class='line' id='LC296'>			<span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">attr</span><span class="p">];</span> </div><div class='line' id='LC297'>		<span class="p">};</span> </div><div class='line' id='LC298'>	<span class="p">};</span></div><div class='line' id='LC299'><br/></div><div class='line' id='LC300'>	<span class="kd">var</span> <span class="nx">sFn</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">attr</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC301'>		<span class="k">return</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">val</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC302'>			<span class="k">this</span><span class="p">[</span><span class="nx">attr</span><span class="p">]</span> <span class="o">=</span> <span class="nx">val</span><span class="p">;</span> </div><div class='line' id='LC303'>			<span class="k">return</span> <span class="k">this</span><span class="p">;</span> </div><div class='line' id='LC304'>		<span class="p">};</span> </div><div class='line' id='LC305'>	<span class="p">};</span></div><div class='line' id='LC306'><br/></div><div class='line' id='LC307'>	<span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">attrs</span><span class="p">.</span><span class="nx">length</span> <span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC308'>		<span class="kd">var</span> <span class="nx">$a</span> <span class="o">=</span> <span class="nx">attrs</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">$b</span> <span class="o">=</span> <span class="nx">$a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="o">+</span> <span class="nx">$a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span></div><div class='line' id='LC309'>		<span class="nx">TimePeriod</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">$a</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC310'>		<span class="nx">TimePeriod</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="s2">&quot;get&quot;</span> <span class="o">+</span> <span class="nx">$b</span><span class="p">]</span> <span class="o">=</span> <span class="nx">gFn</span><span class="p">(</span><span class="nx">$a</span><span class="p">);</span></div><div class='line' id='LC311'>		<span class="nx">TimePeriod</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="s2">&quot;set&quot;</span> <span class="o">+</span> <span class="nx">$b</span><span class="p">]</span> <span class="o">=</span> <span class="nx">sFn</span><span class="p">(</span><span class="nx">$a</span><span class="p">);</span></div><div class='line' id='LC312'>	<span class="p">}</span></div><div class='line' id='LC313'><br/></div><div class='line' id='LC314'>	<span class="k">if</span> <span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">7</span><span class="p">)</span> <span class="p">{</span> </div><div class='line' id='LC315'>		<span class="k">this</span><span class="p">.</span><span class="nx">years</span> <span class="o">=</span> <span class="nx">years</span><span class="p">;</span></div><div class='line' id='LC316'>		<span class="k">this</span><span class="p">.</span><span class="nx">months</span> <span class="o">=</span> <span class="nx">months</span><span class="p">;</span></div><div class='line' id='LC317'>		<span class="k">this</span><span class="p">.</span><span class="nx">setDays</span><span class="p">(</span><span class="nx">days</span><span class="p">);</span></div><div class='line' id='LC318'>		<span class="k">this</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">hours</span><span class="p">);</span> </div><div class='line' id='LC319'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="nx">minutes</span><span class="p">);</span> </div><div class='line' id='LC320'>		<span class="k">this</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="nx">seconds</span><span class="p">);</span> </div><div class='line' id='LC321'>		<span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="nx">milliseconds</span><span class="p">);</span></div><div class='line' id='LC322'>	<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">instanceof</span> <span class="nb">Date</span> <span class="o">&amp;&amp;</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC323'>		<span class="c1">// startDate and endDate as arguments</span></div><div class='line' id='LC324'><br/></div><div class='line' id='LC325'>		<span class="kd">var</span> <span class="nx">d1</span> <span class="o">=</span> <span class="nx">years</span><span class="p">.</span><span class="nx">clone</span><span class="p">();</span></div><div class='line' id='LC326'>		<span class="kd">var</span> <span class="nx">d2</span> <span class="o">=</span> <span class="nx">months</span><span class="p">.</span><span class="nx">clone</span><span class="p">();</span></div><div class='line' id='LC327'><br/></div><div class='line' id='LC328'>		<span class="kd">var</span> <span class="nx">temp</span> <span class="o">=</span> <span class="nx">d1</span><span class="p">.</span><span class="nx">clone</span><span class="p">();</span></div><div class='line' id='LC329'>		<span class="kd">var</span> <span class="nx">orient</span> <span class="o">=</span> <span class="p">(</span><span class="nx">d1</span> <span class="o">&gt;</span> <span class="nx">d2</span><span class="p">)</span> <span class="o">?</span> <span class="o">-</span><span class="mi">1</span> <span class="o">:</span> <span class="o">+</span><span class="mi">1</span><span class="p">;</span></div><div class='line' id='LC330'><br/></div><div class='line' id='LC331'>		<span class="k">this</span><span class="p">.</span><span class="nx">years</span> <span class="o">=</span> <span class="nx">d2</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span> <span class="o">-</span> <span class="nx">d1</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();</span></div><div class='line' id='LC332'>		<span class="nx">temp</span><span class="p">.</span><span class="nx">addYears</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">years</span><span class="p">);</span></div><div class='line' id='LC333'><br/></div><div class='line' id='LC334'>		<span class="k">if</span> <span class="p">(</span><span class="nx">orient</span> <span class="o">==</span> <span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC335'>			<span class="k">if</span> <span class="p">(</span><span class="nx">temp</span> <span class="o">&gt;</span> <span class="nx">d2</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC336'>				<span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">years</span> <span class="o">!==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC337'>					<span class="k">this</span><span class="p">.</span><span class="nx">years</span><span class="o">--</span><span class="p">;</span></div><div class='line' id='LC338'>				<span class="p">}</span></div><div class='line' id='LC339'>			<span class="p">}</span></div><div class='line' id='LC340'>		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span></div><div class='line' id='LC341'>			<span class="k">if</span> <span class="p">(</span><span class="nx">temp</span> <span class="o">&lt;</span> <span class="nx">d2</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC342'>				<span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">years</span> <span class="o">!==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC343'>					<span class="k">this</span><span class="p">.</span><span class="nx">years</span><span class="o">++</span><span class="p">;</span></div><div class='line' id='LC344'>				<span class="p">}</span></div><div class='line' id='LC345'>			<span class="p">}</span></div><div class='line' id='LC346'>		<span class="p">}</span></div><div class='line' id='LC347'><br/></div><div class='line' id='LC348'>		<span class="nx">d1</span><span class="p">.</span><span class="nx">addYears</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">years</span><span class="p">);</span></div><div class='line' id='LC349'><br/></div><div class='line' id='LC350'>		<span class="k">if</span> <span class="p">(</span><span class="nx">orient</span> <span class="o">==</span> <span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC351'>			<span class="k">while</span> <span class="p">(</span><span class="nx">d1</span> <span class="o">&lt;</span> <span class="nx">d2</span> <span class="o">&amp;&amp;</span> <span class="nx">d1</span><span class="p">.</span><span class="nx">clone</span><span class="p">().</span><span class="nx">addDays</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">(</span><span class="nx">d1</span><span class="p">.</span><span class="nx">getYear</span><span class="p">(),</span> <span class="nx">d1</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">())</span> <span class="p">)</span> <span class="o">&lt;</span> <span class="nx">d2</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC352'>				<span class="nx">d1</span><span class="p">.</span><span class="nx">addMonths</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span></div><div class='line' id='LC353'>				<span class="k">this</span><span class="p">.</span><span class="nx">months</span><span class="o">++</span><span class="p">;</span></div><div class='line' id='LC354'>			<span class="p">}</span></div><div class='line' id='LC355'>		<span class="p">}</span></div><div class='line' id='LC356'>		<span class="k">else</span> <span class="p">{</span></div><div class='line' id='LC357'>			<span class="k">while</span> <span class="p">(</span><span class="nx">d1</span> <span class="o">&gt;</span> <span class="nx">d2</span> <span class="o">&amp;&amp;</span> <span class="nx">d1</span><span class="p">.</span><span class="nx">clone</span><span class="p">().</span><span class="nx">addDays</span><span class="p">(</span><span class="o">-</span><span class="nx">d1</span><span class="p">.</span><span class="nx">getDaysInMonth</span><span class="p">())</span> <span class="o">&gt;</span> <span class="nx">d2</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC358'>				<span class="nx">d1</span><span class="p">.</span><span class="nx">addMonths</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span></div><div class='line' id='LC359'>				<span class="k">this</span><span class="p">.</span><span class="nx">months</span><span class="o">--</span><span class="p">;</span></div><div class='line' id='LC360'>			<span class="p">}</span></div><div class='line' id='LC361'>		<span class="p">}</span></div><div class='line' id='LC362'><br/></div><div class='line' id='LC363'>		<span class="kd">var</span> <span class="nx">diff</span> <span class="o">=</span> <span class="nx">d2</span> <span class="o">-</span> <span class="nx">d1</span><span class="p">;</span></div><div class='line' id='LC364'><br/></div><div class='line' id='LC365'>		<span class="k">if</span> <span class="p">(</span><span class="nx">diff</span> <span class="o">!==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC366'>			<span class="kd">var</span> <span class="nx">ts</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">TimeSpan</span><span class="p">(</span><span class="nx">diff</span><span class="p">);</span></div><div class='line' id='LC367'>			<span class="k">this</span><span class="p">.</span><span class="nx">setDays</span><span class="p">(</span><span class="nx">ts</span><span class="p">.</span><span class="nx">getDays</span><span class="p">());</span></div><div class='line' id='LC368'>			<span class="k">this</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">ts</span><span class="p">.</span><span class="nx">getHours</span><span class="p">());</span></div><div class='line' id='LC369'>			<span class="k">this</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="nx">ts</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">());</span></div><div class='line' id='LC370'>			<span class="k">this</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="nx">ts</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">());</span></div><div class='line' id='LC371'>			<span class="k">this</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="nx">ts</span><span class="p">.</span><span class="nx">getMilliseconds</span><span class="p">());</span></div><div class='line' id='LC372'>		<span class="p">}</span></div><div class='line' id='LC373'>	<span class="p">}</span></div><div class='line' id='LC374'>	<span class="k">return</span> <span class="k">this</span><span class="p">;</span></div><div class='line' id='LC375'><span class="p">};</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>
      </div>
    </div>

  </div>

<div class="frame frame-loading large-loading-area" style="display:none;" data-tree-list-url="/filamentgroup/jQuery-UI-Date-Range-Picker/tree-list/e71a9ed2495fc678a46088fb6cfdcbf79558f660" data-blob-url-prefix="/filamentgroup/jQuery-UI-Date-Range-Picker/blob/e71a9ed2495fc678a46088fb6cfdcbf79558f660">
  <img src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-64.gif?1329872007" height="64" width="64">
</div>

      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer" >
        
  <div class="upper_footer">
     <div class="container clearfix">

       <!--[if IE]><h4 id="blacktocat_ie">GitHub Links</h4><![endif]-->
       <![if !IE]><h4 id="blacktocat">GitHub Links</h4><![endif]>

       <ul class="footer_nav">
         <h4>GitHub</h4>
         <li><a href="https://github.com/about">About</a></li>
         <li><a href="https://github.com/blog">Blog</a></li>
         <li><a href="https://github.com/features">Features</a></li>
         <li><a href="https://github.com/contact">Contact &amp; Support</a></li>
         <li><a href="https://github.com/training">Training</a></li>
         <li><a href="http://enterprise.github.com/">GitHub Enterprise</a></li>
         <li><a href="http://status.github.com/">Site Status</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Tools</h4>
         <li><a href="http://get.gaug.es/">Gauges: Analyze web traffic</a></li>
         <li><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></li>
         <li><a href="https://gist.github.com">Gist: Code snippets</a></li>
         <li><a href="http://mac.github.com/">GitHub for Mac</a></li>
         <li><a href="http://mobile.github.com/">Issues for iPhone</a></li>
         <li><a href="http://jobs.github.com/">Job Board</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Extras</h4>
         <li><a href="http://shop.github.com/">GitHub Shop</a></li>
         <li><a href="http://octodex.github.com/">The Octodex</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Documentation</h4>
         <li><a href="http://help.github.com/">GitHub Help</a></li>
         <li><a href="http://developer.github.com/">Developer API</a></li>
         <li><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></li>
         <li><a href="http://pages.github.com/">GitHub Pages</a></li>
       </ul>

     </div><!-- /.site -->
  </div><!-- /.upper_footer -->

<div class="lower_footer">
  <div class="container clearfix">
    <!--[if IE]><div id="legal_ie"><![endif]-->
    <![if !IE]><div id="legal"><![endif]>
      <ul>
          <li><a href="https://github.com/site/terms">Terms of Service</a></li>
          <li><a href="https://github.com/site/privacy">Privacy</a></li>
          <li><a href="https://github.com/security">Security</a></li>
      </ul>

      <p>&copy; 2012 <span title="0.04835s from fe9.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    </div><!-- /#legal or /#legal_ie-->

      <div class="sponsor">
        <a href="http://www.rackspace.com" class="logo">
          <img alt="Dedicated Server" height="36" src="https://a248.e.akamai.net/assets.github.com/images/modules/footer/rackspaces_logo.png?1329521039" width="38" />
        </a>
        Powered by the <a href="http://www.rackspace.com ">Dedicated
        Servers</a> and<br/> <a href="http://www.rackspacecloud.com">Cloud
        Computing</a> of Rackspace Hosting<span>&reg;</span>
      </div>
  </div><!-- /.site -->
</div><!-- /.lower_footer -->

      </div><!-- /#footer -->

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus site search</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column middle">
        <dl class="keyboard-mappings">
          <dt>I</dt>
          <dd>Mark selection as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>U</dt>
          <dd>Mark selection as unread</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Remove selection from view</dd>
        </dl>
      </div><!-- /.column.middle -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">←</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">→</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↑</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↓</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">←</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">→</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↑</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↓</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>
</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div class="ajax-error-message">
      <p><span class="icon"></span> Something went wrong with that request. Please try again. <a href="javascript:;" class="ajax-error-dismiss">Dismiss</a></p>
    </div>

    <div id="logo-popup">
      <h2>Looking for the GitHub logo?</h2>
      <ul>
        <li>
          <h4>GitHub Logo</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip"><img alt="Github_logo" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/github_logo.png?1315867479" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip" class="minibutton btn-download download"><span><span class="icon"></span>Download</span></a>
        </li>
        <li>
          <h4>The Octocat</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip"><img alt="Octocat" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/octocat.png?1315867479" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip" class="minibutton btn-download download"><span><span class="icon"></span>Download</span></a>
        </li>
      </ul>
    </div>

    
    
    
    <span id='server_response_time' data-time='0.05035' data-host='fe9'></span>
  </body>
</html>

